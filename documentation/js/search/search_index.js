var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/guards/AdminGuard.html",[0,2.509,1,2.247]],["body/guards/AdminGuard.html",[1,3.408,2,2.966,3,0.302,4,0.263,5,0.263,6,3.38,7,2.602,8,5.221,9,0.343,10,1.561,11,4.335,12,3.293,13,0.43,14,4.008,15,1.305,16,0.027,17,0.791,18,0.386,19,1.217,20,2.41,21,1.217,22,0.302,23,0.918,24,0.302,25,0.143,26,1.4,27,1.874,28,2.657,29,2.966,30,1.561,31,4.008,32,4.008,33,0.02,34,0.02]],["title/controllers/AppController.html",[35,1.715,36,2.247]],["body/controllers/AppController.html",[3,0.314,4,0.273,5,0.273,9,0.356,10,1.599,13,0.446,16,0.027,21,1.263,22,0.397,23,0.952,24,0.314,25,0.149,30,1.263,33,0.021,34,0.021,35,2.664,36,3.489,37,2.105,38,3.508,39,5.119,40,1.098,41,4.16,42,1.039,43,3.176,44,3.508,45,1.945,46,4.16,47,4.16]],["title/modules/AppModule.html",[48,1.715,49,2.247]],["body/modules/AppModule.html",[3,0.181,4,0.157,5,0.157,10,0.727,13,0.257,15,0.78,16,0.027,17,0.473,18,0.346,19,0.727,21,0.727,22,0.451,23,0.548,24,0.181,25,0.086,26,0.837,30,0.727,33,0.014,34,0.014,36,2.855,37,1.817,43,2.959,44,2.02,48,2.179,49,3.962,50,1.317,51,1.317,52,1.588,53,1.588,54,1.317,55,2.855,56,1.588,57,2.02,58,2.02,59,2.02,60,3.235,61,3.235,62,2.38,63,1.588,64,1.588,65,1.772,66,2.657,67,2.02,68,3.028,69,4.034,70,2.395,71,3.028,72,1.772,73,3.591,74,3.591,75,2.02,76,1.772,77,1.317,78,2.395,79,4.307,80,2.02,81,2.395,82,2.395,83,2.395,84,1.254,85,2.02,86,1.817,87,2.395,88,1.772,89,1.772,90,1.772,91,1.772,92,1.588,93,1.772,94,2.395,95,2.395,96,2.657,97,2.02,98,1.588,99,2.395,100,2.395,101,1.614,102,2.395,103,2.395,104,2.395,105,2.395,106,2.395,107,2.395,108,2.02,109,2.395,110,2.395,111,2.395,112,2.395,113,1.772,114,2.395,115,2.395,116,1.588,117,2.395,118,2.395,119,1.12,120,2.395,121,2.395,122,2.395,123,2.395,124,2.395]],["title/injectables/AppService.html",[43,1.864,125,1.03]],["body/injectables/AppService.html",[3,0.331,4,0.288,5,0.288,9,0.376,10,1.653,13,0.471,16,0.027,21,1.332,22,0.331,23,1.004,24,0.331,25,0.157,30,1.332,33,0.022,34,0.022,39,5.218,42,1.074,43,2.994,125,1.653,126,2.22,127,3.7,128,4.388,129,4.388,130,4.388]],["title/guards/AuthGuard.html",[0,2.509,131,2.038]],["body/guards/AuthGuard.html",[2,3.035,3,0.309,4,0.269,5,0.269,7,2.64,8,5.258,9,0.351,10,1.584,11,4.4,12,3.321,13,0.44,15,1.336,16,0.027,17,0.81,18,0.395,19,1.246,20,2.466,21,1.246,22,0.309,23,0.939,24,0.309,25,0.147,26,1.432,27,1.918,28,2.719,30,1.246,33,0.021,34,0.021,131,3.137,132,3.459,133,4.102,134,4.102]],["title/injectables/AuthService.html",[125,1.03,135,1.864]],["body/injectables/AuthService.html",[3,0.171,4,0.149,5,0.149,9,0.194,10,1.046,13,0.447,15,1.356,16,0.027,17,0.822,18,0.401,19,1.265,21,1.046,22,0.351,23,0.519,24,0.171,25,0.081,26,2.018,30,1.265,33,0.014,34,0.014,42,1.199,45,1.06,84,1.912,119,2.175,125,1.046,126,1.147,135,1.894,136,1.677,137,2.666,138,2.903,139,3.443,140,1.147,141,1.677,142,2.122,143,2.266,144,3.443,145,3.83,146,2.266,147,2.504,148,2.282,149,3.443,150,2.266,151,2.266,152,1.677,153,1.246,154,2.266,155,2.548,156,2.266,157,2.266,158,2.266,159,2.266,160,1.911,161,2.266,162,2.903,163,3.443,164,2.532,165,3.443,166,2.266,167,3.082,168,2.266,169,4.652,170,2.266,171,5.642,172,2.266,173,3.443,174,3.443,175,3.443,176,3.443,177,1.911,178,2.266,179,4.165,180,3.443,181,1.677,182,2.266,183,2.266,184,1.911,185,1.677,186,3.443,187,2.266,188,2.266]],["title/interfaces/ClassConstructor.html",[189,1.715,190,2.038]],["body/interfaces/ClassConstructor.html",[3,0.274,4,0.238,5,0.238,7,1.836,12,2.65,16,0.027,22,0.435,23,0.831,24,0.364,25,0.172,30,1.643,33,0.019,34,0.019,45,1.697,101,1.36,119,1.697,189,1.836,190,3.252,191,2.685,192,2.405,193,3.06,194,3.565,195,3.565,196,4.063,197,2.685,198,3.06,199,3.06,200,3.06,201,1.267,202,3.06,203,2.685,204,2.685,205,3.06,206,3.06,207,2.405,208,2.685,209,2.685,210,2.685,211,3.06,212,3.06,213,3.06,214,2.405,215,3.06]],["title/classes/CreatePrescriptionDto.html",[25,0.121,216,1.715]],["body/classes/CreatePrescriptionDto.html",[3,0.246,4,0.214,5,0.214,9,0.28,13,0.55,16,0.027,17,0.645,18,0.575,22,0.339,24,0.387,25,0.207,33,0.018,34,0.018,40,1.353,42,1.18,101,1.224,201,1.14,216,2.27,217,1.063,218,3.658,219,1.963,220,1.185,221,2.064,222,2.064,223,2.397,224,2.466,225,3.265,226,1.927,227,2.753,228,2.753,229,3.265,230,2.392,231,3.265,232,3.265,233,2.397,234,2.698,235,1.224,236,1.315,237,0.925,238,1.315,239,1.527]],["title/classes/CreateUserDto.html",[25,0.121,240,2.247]],["body/classes/CreateUserDto.html",[3,0.308,4,0.268,5,0.268,9,0.35,13,0.558,16,0.026,18,0.501,22,0.308,24,0.308,25,0.186,33,0.021,34,0.021,40,1.373,42,1.19,145,3.795,147,3.442,217,1.329,220,1.373,224,2.306,235,1.53,240,3.448,241,4.828,242,3.443,243,5.726,244,4.083,245,4.083]],["title/injectables/CurrentUserInterceptor.html",[125,1.03,246,2.509]],["body/injectables/CurrentUserInterceptor.html",[3,0.247,4,0.215,5,0.215,7,1.659,9,0.281,10,1.366,12,3.04,13,0.482,15,1.465,16,0.027,17,0.888,18,0.433,19,1.366,20,1.971,21,0.995,22,0.339,23,0.75,24,0.247,25,0.117,26,1.794,27,1.533,28,2.172,29,2.425,30,0.995,33,0.018,34,0.018,45,1.533,84,1.571,125,1.366,126,1.659,137,2.599,140,1.659,141,2.425,142,2.41,148,2.172,153,1.802,164,1.659,194,3.328,195,4.09,209,3.328,210,3.8,246,3.328,247,4.331,248,2.764,249,3.793,250,3.278,251,3.278,252,3.328,253,3.278,254,2.425,255,3.278]],["title/injectables/CurrentUserMiddleware.html",[125,1.03,256,2.038]],["body/injectables/CurrentUserMiddleware.html",[3,0.221,4,0.192,5,0.192,7,1.482,9,0.251,10,1.263,13,0.446,15,1.354,16,0.027,17,0.821,18,0.4,19,1.263,21,0.889,22,0.397,23,0.67,24,0.221,25,0.105,26,1.452,27,2.599,33,0.016,34,0.016,45,1.37,84,1.838,88,2.167,89,2.167,90,4.113,91,2.167,92,1.941,93,2.167,125,1.263,126,1.482,137,2.447,140,1.482,141,2.167,142,2.326,153,1.611,162,3.506,164,1.482,189,1.482,252,3.077,254,2.167,256,2.5,257,3.578,258,2.167,259,2.929,260,3.506,261,4.077,262,4.438,263,4.438,264,2.929,265,2.929,266,3.506,267,3.077,268,1.761,269,2.47,270,2.47,271,3.506,272,1.611,273,2.47,274,2.47]],["title/classes/GetPrescriptionDto.html",[25,0.121,275,2.247]],["body/classes/GetPrescriptionDto.html",[3,0.331,4,0.288,5,0.288,9,0.376,13,0.471,16,0.026,18,0.422,22,0.331,24,0.331,25,0.195,33,0.022,34,0.022,40,1.158,42,1.074,217,1.429,219,2.638,220,1.437,224,2.383,235,1.645,236,2.383,275,3.608,276,4.59,277,4.388]],["title/classes/MedicationDto.html",[25,0.121,226,1.184]],["body/classes/MedicationDto.html",[3,0.258,4,0.224,5,0.224,9,0.293,13,0.496,16,0.027,17,0.675,18,0.566,22,0.349,24,0.396,25,0.21,33,0.018,34,0.018,40,1.222,42,1.223,101,1.281,201,1.193,216,1.729,217,1.113,218,3.478,219,2.055,220,1.222,221,1.376,222,1.376,223,1.598,224,2.539,226,1.964,230,2.275,233,2.454,234,2.783,235,1.281,236,1.376,237,1.486,238,2.114,239,1.598,278,3.417,279,3.417]],["title/classes/MedicationDto-1.html",[25,0.102,226,0.993,280,2.397]],["body/classes/MedicationDto-1.html",[3,0.25,4,0.217,5,0.217,9,0.284,13,0.486,16,0.027,17,0.654,18,0.436,22,0.342,24,0.39,25,0.208,33,0.018,34,0.018,40,1.197,42,1.235,101,1.242,201,1.158,217,1.079,220,1.197,221,1.335,222,1.335,223,1.55,224,2.476,226,1.804,230,1.965,233,2.416,235,1.242,236,1.335,237,1.573,238,2.081,239,1.55,281,2.197,282,3.822,283,3.315,284,3.315,285,3.855,286,4.631,287,3.354,288,2.453,289,1.677,290,2.453]],["title/classes/MedicationDto-2.html",[25,0.102,226,0.993,291,2.397]],["body/classes/MedicationDto-2.html",[3,0.276,4,0.24,5,0.24,9,0.313,13,0.52,16,0.027,18,0.557,22,0.366,24,0.366,25,0.207,33,0.019,34,0.019,40,1.279,42,1.187,101,1.371,201,1.278,217,1.191,220,1.279,221,1.474,222,1.474,224,2.489,226,2.019,233,2.265,234,2.913,235,1.371,237,1.538,238,2.187,239,1.711,292,4.019,293,2.707,294,3.659,295,3.659,296,2.012]],["title/classes/PatientDto.html",[25,0.121,230,1.47]],["body/classes/PatientDto.html",[3,0.258,4,0.224,5,0.224,9,0.293,13,0.496,16,0.027,17,1.036,18,0.566,22,0.349,24,0.396,25,0.21,33,0.018,34,0.018,40,1.222,42,1.223,101,1.281,201,1.193,216,1.729,217,1.113,218,3.478,219,2.055,220,1.222,221,1.376,222,1.376,223,1.598,224,2.539,226,1.833,230,2.438,233,2.454,234,2.783,235,1.281,236,2.114,237,0.968,238,1.376,239,1.598,297,3.417,298,3.417]],["title/classes/PatientDto-1.html",[25,0.102,230,1.232,280,2.397]],["body/classes/PatientDto-1.html",[3,0.25,4,0.217,5,0.217,9,0.284,13,0.486,16,0.027,17,1.02,18,0.436,22,0.342,24,0.39,25,0.208,33,0.018,34,0.018,40,1.197,42,1.235,101,1.242,201,1.158,217,1.079,220,1.197,221,1.335,222,1.335,223,1.55,224,2.476,226,1.583,230,2.239,233,2.416,235,1.242,236,2.081,237,1.284,238,1.335,239,1.55,281,2.197,282,3.822,285,3.855,286,4.631,287,3.354,288,2.453,289,1.677,290,2.453,299,3.315,300,3.315]],["title/entities/Prescription.html",[86,1.715,301,2.038]],["body/entities/Prescription.html",[3,0.193,4,0.167,5,0.167,9,0.219,13,0.591,16,0.027,17,0.504,18,0.563,22,0.284,24,0.193,25,0.091,33,0.015,34,0.015,40,1.455,42,1.199,86,1.906,116,1.693,214,2.497,220,0.995,221,1.802,222,1.802,223,2.092,236,1.029,237,1.491,238,1.029,301,2.265,302,2.154,303,4.475,304,3.773,305,3.773,306,3.773,307,2.555,308,4.441,309,2.555,310,3.767,311,2.555,312,3.767,313,4.939,314,3.177,315,2.555,316,2.555,317,2.555,318,2.555,319,2.555,320,3.767,321,3.767,322,3.767,323,1.405,324,2.555,325,3.767,326,2.788,327,2.555,328,2.555,329,2.555,330,2.555,331,2.555,332,2.555,333,2.555,334,3.767,335,1.891,336,3.654,337,2.788,338,3.177,339,3.767,340,3.767,341,3.767,342,2.555,343,3.767,344,3.177,345,2.555,346,2.154,347,1.891]],["title/classes/PrescriptionDto.html",[25,0.121,289,1.715]],["body/classes/PrescriptionDto.html",[3,0.232,4,0.201,5,0.201,9,0.263,13,0.576,16,0.027,17,0.606,18,0.518,22,0.324,24,0.374,25,0.202,33,0.017,34,0.017,40,1.419,42,1.213,101,1.151,201,1.073,217,1,220,1.135,221,1.999,222,1.999,223,2.32,224,2.425,226,1.733,230,2.151,233,2.32,235,1.151,236,1.237,237,1.522,238,1.237,239,1.436,281,2.036,285,3.751,286,4.546,287,3.182,288,2.273,289,2.176,290,2.273,348,4.301,349,3.072,350,3.072,351,3.072,352,3.072,353,3.072,354,3.072,355,3.072]],["title/controllers/PrescriptionsController.html",[35,1.715,356,2.247]],["body/controllers/PrescriptionsController.html",[1,1.483,3,0.169,4,0.147,5,0.147,9,0.192,10,1.036,13,0.443,15,1.345,16,0.027,17,0.816,18,0.398,19,1.255,21,1.255,22,0.467,23,0.512,24,0.169,25,0.08,26,0.781,30,1.255,33,0.014,34,0.014,35,1.132,37,1.132,40,1.091,42,0.816,45,1.046,84,0.781,85,1.886,86,1.132,113,2.523,119,1.046,131,1.345,137,2.091,148,1.483,164,2.091,216,2.338,236,1.373,237,0.966,272,1.23,275,3.063,289,1.132,296,2.541,305,1.886,323,1.23,335,3.057,336,1.655,337,1.655,346,1.886,347,1.655,356,2.26,357,1.886,358,1.886,359,3.897,360,3.41,361,3.41,362,4.132,363,2.237,364,2.237,365,4.738,366,2.237,367,2.237,368,2.237,369,3.41,370,2.237,371,1.886,372,1.886,373,2.237,374,1.655,375,2.875,376,1.875,377,1.886,378,1.886,379,2.237,380,1.886,381,1.655,382,2.237,383,1.483,384,1.886,385,1.886,386,1.886,387,3.41,388,2.237,389,2.237,390,2.237,391,2.237,392,1.886,393,2.237,394,2.237,395,2.237,396,1.886,397,2.237,398,2.237,399,2.875,400,2.237,401,2.237,402,2.237,403,2.237,404,2.237,405,2.237,406,2.237,407,2.237]],["title/modules/PrescriptionsModule.html",[48,1.715,60,2.038]],["body/modules/PrescriptionsModule.html",[3,0.284,4,0.247,5,0.247,16,0.027,22,0.458,23,0.863,24,0.284,25,0.135,33,0.02,34,0.02,37,2.5,48,2.789,50,2.072,51,2.072,52,2.498,53,2.498,54,2.072,55,3.653,56,2.498,60,3.746,62,3.274,63,2.498,64,2.498,66,2.788,76,2.788,77,2.072,86,1.907,356,3.653,376,3.427,377,3.177,381,2.788,408,3.177,409,3.177,410,3.768,411,3.768,412,3.768]],["title/injectables/PrescriptionsService.html",[125,1.03,376,1.864]],["body/injectables/PrescriptionsService.html",[3,0.125,4,0.108,5,0.108,9,0.142,10,0.816,13,0.494,15,1.5,16,0.027,17,0.999,18,0.376,19,1.399,21,1.306,22,0.366,23,0.378,24,0.125,25,0.059,26,1.609,30,1.399,33,0.011,34,0.011,42,0.67,77,0.909,86,2.457,113,1.223,119,1.256,125,0.816,126,0.837,137,2.838,140,1.36,152,1.223,164,2.176,167,1.223,181,2.512,185,1.988,216,1.978,221,1.367,222,1.082,223,1.828,236,1.732,237,1.305,238,1.082,289,0.837,296,0.909,304,2.862,323,0.909,326,1.988,336,2.512,337,1.988,347,3.182,359,4.094,374,1.223,375,1.394,376,1.478,381,1.223,385,1.394,386,1.394,396,1.394,399,1.394,413,1.394,414,2.687,415,3.394,416,3.394,417,1.394,418,3.909,419,1.653,420,2.266,421,2.687,422,1.653,423,2.687,424,1.653,425,5.059,426,1.653,427,1.653,428,1.653,429,4.607,430,1.653,431,1.653,432,3.909,433,1.653,434,1.394,435,1.653,436,1.653,437,1.653,438,1.223,439,1.394,440,1.653,441,1.653,442,1.653,443,1.653,444,2.266,445,1.653,446,1.653,447,1.653,448,1.653,449,1.653,450,1.653,451,1.653,452,1.653,453,1.653,454,1.653,455,1.653,456,1.653,457,2.687,458,1.653,459,2.687,460,1.653,461,2.687,462,2.687,463,1.653,464,1.653,465,1.653,466,1.653,467,1.653,468,1.653,469,1.653,470,1.653,471,1.653,472,1.394,473,2.687,474,2.687,475,1.653,476,1.653,477,2.687,478,2.687,479,1.653,480,1.653,481,1.653,482,1.653,483,1.653,484,1.653,485,1.653,486,1.653]],["title/interfaces/Request.html",[27,1.585,189,1.715]],["body/interfaces/Request.html",[3,0.245,4,0.213,5,0.213,7,1.646,9,0.279,16,0.027,18,0.313,19,1.359,22,0.416,23,0.745,24,0.245,25,0.116,26,1.563,27,2.577,33,0.018,34,0.018,45,1.521,84,2.085,88,2.407,89,2.407,90,3.786,91,2.407,92,2.156,93,2.407,125,1.359,137,1.646,142,2.06,153,1.789,164,1.646,189,1.646,191,2.407,220,1.182,252,3.312,254,2.407,256,1.956,257,2.407,258,2.407,260,2.743,261,2.743,262,3.774,263,3.774,266,3.774,267,3.312,268,1.956,269,2.743,270,2.743,271,3.774,272,3.03,273,2.743,274,2.743]],["title/classes/SerializeInterceptor.html",[25,0.121,207,2.247]],["body/classes/SerializeInterceptor.html",[3,0.239,4,0.208,5,0.208,7,2.225,9,0.272,10,1.335,12,2.998,13,0.472,15,1.432,16,0.027,17,0.868,18,0.423,19,1.335,20,1.907,21,0.963,22,0.411,23,0.726,24,0.332,25,0.157,30,1.533,33,0.017,34,0.017,45,1.483,101,1.189,119,1.483,140,1.605,189,1.605,190,2.644,192,2.102,193,2.674,194,3.735,195,4.033,196,4.256,197,2.347,198,2.674,199,2.674,200,2.674,201,1.108,202,2.674,203,2.347,204,2.347,205,2.674,206,2.674,207,2.914,208,3.254,209,3.254,210,3.735,211,2.674,212,2.674,213,2.674,214,2.102,215,2.674,217,1.033,249,3.708,487,3.171,488,3.171,489,3.171]],["title/classes/UpdatePrescriptionDto.html",[25,0.121,296,1.864]],["body/classes/UpdatePrescriptionDto.html",[3,0.275,4,0.239,5,0.239,9,0.312,13,0.518,16,0.027,18,0.556,22,0.365,24,0.365,25,0.206,33,0.019,34,0.019,40,1.276,42,1.139,101,1.366,201,1.272,217,1.186,220,1.276,221,2.183,222,2.183,224,2.419,226,2.016,227,3.072,228,3.072,233,2.259,234,2.905,235,1.366,237,1.032,238,1.467,239,1.704,292,4.011,293,2.696,296,2.657,490,3.644,491,3.644]],["title/entities/User.html",[84,1.184,301,2.038]],["body/entities/User.html",[3,0.293,4,0.255,5,0.255,9,0.333,13,0.6,16,0.027,18,0.538,22,0.293,24,0.293,25,0.139,33,0.02,34,0.02,40,1.476,42,1.168,84,1.76,116,2.575,145,3.707,147,3.362,220,1.33,237,1.584,301,3.029,306,4.716,308,5.17,323,2.136,492,3.276,493,3.885,494,3.728,495,3.885,496,3.885]],["title/classes/UserDto.html",[25,0.121,497,2.247]],["body/classes/UserDto.html",[3,0.314,4,0.273,5,0.273,9,0.356,13,0.565,16,0.026,18,0.507,22,0.314,24,0.314,25,0.188,33,0.021,34,0.021,40,1.39,42,1.039,147,3.472,201,1.453,217,1.354,220,1.39,237,1.636,285,4.151,494,3.895,497,3.489,498,3.508,499,4.16,500,4.16]],["title/controllers/UsersController.html",[35,1.715,501,2.247]],["body/controllers/UsersController.html",[3,0.156,4,0.135,5,0.135,9,0.177,10,0.973,13,0.514,15,1.562,16,0.027,17,0.947,18,0.462,19,1.456,21,1.456,22,0.424,23,0.472,24,0.156,25,0.074,26,1.372,30,1.345,33,0.013,34,0.013,35,1.044,37,1.044,40,1.266,42,0.776,72,1.527,84,2.149,98,3.879,119,0.965,131,1.241,135,2.161,137,2.845,138,2.703,140,1.044,142,1.583,148,2.604,152,1.527,153,1.135,164,1.988,167,1.527,184,1.74,185,1.527,237,0.908,240,3.511,268,1.241,272,1.135,335,1.527,358,1.74,365,4.044,371,1.74,372,1.74,374,1.527,378,1.74,380,1.74,383,1.368,384,1.74,392,1.74,438,2.372,497,1.368,501,2.124,502,1.74,503,2.064,504,3.205,505,3.205,506,3.205,507,3.205,508,2.064,509,3.205,510,2.064,511,2.064,512,3.205,513,2.064,514,2.064,515,3.205,516,2.064,517,2.064,518,3.205,519,2.064,520,2.064,521,2.064,522,2.064,523,2.064,524,2.064,525,1.74,526,2.064,527,2.064,528,2.064,529,2.064,530,2.064,531,2.064,532,3.929,533,1.74,534,2.064,535,2.064,536,3.205,537,3.205,538,2.064,539,2.064,540,2.064,541,2.064]],["title/modules/UsersModule.html",[48,1.715,61,2.038]],["body/modules/UsersModule.html",[3,0.241,4,0.209,5,0.209,10,0.97,13,0.343,15,1.04,16,0.027,17,0.631,18,0.308,19,0.97,21,0.97,22,0.459,23,0.731,24,0.241,25,0.114,33,0.018,34,0.018,37,2.236,48,2.564,50,1.757,51,1.757,52,2.117,53,2.117,54,1.757,55,3.358,56,2.117,61,3.73,62,2.929,63,2.117,64,2.117,66,2.364,67,2.694,68,3.726,69,4.61,71,2.694,72,2.364,76,2.364,77,1.757,84,1.116,135,3.265,142,2.391,153,1.757,256,1.92,268,1.92,501,3.358,525,2.694,542,2.694,543,2.694,544,3.194,545,3.194,546,3.194,547,3.194,548,3.194,549,3.194,550,3.194]],["title/injectables/UsersService.html",[125,1.03,142,1.365]],["body/injectables/UsersService.html",[3,0.218,4,0.189,5,0.189,9,0.248,10,1.251,13,0.561,15,1.704,16,0.027,17,1.033,18,0.504,19,1.589,21,1.458,22,0.395,23,0.662,24,0.218,25,0.103,26,1.009,30,1.589,33,0.016,34,0.016,42,1.215,77,1.59,84,1.439,125,1.251,126,1.463,140,1.463,142,1.659,145,3.468,147,3.146,181,3.048,237,1.359,268,1.738,323,1.59,417,2.437,420,3.474,434,2.437,438,2.139,439,2.437,444,2.437,472,3.474,494,3.552,533,2.437,551,2.437,552,4.12,553,4.412,554,2.89,555,4.12,556,2.89,557,4.12,558,2.89,559,4.12,560,2.89,561,2.89,562,2.89,563,2.89]],["title/coverage.html",[564,3.406]],["body/coverage.html",[0,2.604,1,1.546,5,0.153,6,1.966,16,0.027,18,0.224,25,0.219,27,1.09,33,0.014,34,0.014,35,2.145,36,1.546,38,1.966,43,1.282,54,1.282,65,1.725,84,0.814,86,1.18,96,1.725,119,1.09,125,1.618,127,1.966,131,1.402,132,1.966,135,1.282,136,2.604,142,0.939,155,1.725,189,1.781,190,1.402,192,2.809,203,2.604,207,1.546,216,1.18,218,2.809,219,2.838,226,1.48,230,1.525,240,1.546,241,1.966,242,1.966,246,1.725,247,1.966,248,1.966,256,1.402,257,2.604,258,2.604,272,1.282,275,1.546,276,1.966,281,2.809,289,1.18,292,2.604,293,2.604,296,1.282,301,2.116,302,1.966,356,1.546,357,1.966,376,1.282,383,1.546,413,1.966,492,1.966,497,1.546,498,1.966,501,1.546,502,1.966,551,1.966,564,1.725,565,2.332,566,2.332,567,2.332,568,6.732,569,5.327,570,4.238,571,5.692,572,6.031,573,1.966,574,4.238,575,3.519,576,2.332,577,1.966,578,1.966,579,2.332,580,2.332,581,2.332]],["title/dependencies.html",[51,2.239,582,2.397]],["body/dependencies.html",[16,0.027,23,0.905,25,0.182,33,0.02,34,0.02,51,2.175,75,3.334,77,2.175,80,3.334,98,3.378,108,3.334,197,2.926,201,1.381,235,1.482,267,2.926,323,2.175,326,2.926,583,5.957,584,3.954,585,3.954,586,3.954,587,3.954,588,3.954,589,3.954,590,3.954,591,3.954,592,3.954,593,3.954,594,3.954,595,3.954,596,3.954,597,3.954,598,3.954,599,3.954,600,3.954,601,3.954,602,3.954,603,3.954,604,3.954]],["title/miscellaneous/functions.html",[605,1.884,606,3.433]],["body/miscellaneous/functions.html",[9,0.404,15,1.536,16,0.024,17,0.931,18,0.454,19,1.432,33,0.023,34,0.023,54,3.36,190,3.421,192,3.126,204,3.49,208,3.49,383,3.771,573,3.977,605,3.126,606,3.977,607,4.717,608,4.717]],["title/index.html",[9,0.244,609,2.843,610,2.843]],["body/index.html",[4,0.219,16,0.026,33,0.018,34,0.018,92,2.214,177,2.816,338,2.816,344,2.816,553,2.816,564,2.471,611,3.34,612,3.34,613,5.186,614,3.34,615,3.34,616,3.34,617,3.34,618,3.34,619,2.816,620,5.186,621,3.34,622,3.34,623,3.34,624,3.34,625,3.34,626,3.34,627,3.34,628,6.159,629,3.34,630,3.34,631,3.34,632,6.018,633,3.34,634,3.34,635,4.556,636,3.34,637,3.34,638,3.34,639,3.34,640,4.556,641,4.556,642,3.34,643,3.34,644,3.34,645,4.556,646,4.556,647,3.34,648,3.34,649,3.34,650,3.34,651,3.34,652,2.816,653,3.34,654,3.34,655,3.34,656,3.34,657,3.34,658,3.34,659,3.34,660,3.34,661,2.816,662,3.34,663,3.34,664,3.34,665,3.34,666,3.34,667,3.34,668,2.816]],["title/modules.html",[50,2.531]],["body/modules.html",[16,0.023,33,0.023,34,0.023,49,3.212,50,2.665,60,2.914,61,2.914,652,5.212,669,6.181,670,6.181,671,6.181]],["title/overview.html",[672,3.881]],["body/overview.html",[2,2.753,16,0.025,33,0.019,34,0.019,37,1.883,43,3.012,48,1.883,49,4.258,50,2.046,51,2.046,52,2.466,53,2.466,54,2.046,55,2.466,56,2.466,57,3.137,58,3.137,59,3.137,60,3.636,61,3.806,62,3.247,63,2.466,64,2.466,116,2.466,126,1.883,135,3.012,142,2.206,191,2.753,217,1.211,291,4.618,376,3.012,408,3.137,409,3.137,542,3.137,543,3.137,672,3.137,673,4.898,674,3.721,675,3.721]],["title/properties.html",[220,1.075,582,2.397]],["body/properties.html",[16,0.026,33,0.023,34,0.023,220,1.316,619,4.202,661,4.202,668,4.202,676,4.983,677,4.983,678,4.983]],["title/miscellaneous/variables.html",[605,1.884,679,3.433]],["body/miscellaneous/variables.html",[9,0.36,12,2.309,16,0.027,20,2.525,26,1.467,27,1.964,28,2.783,29,3.107,30,1.275,33,0.021,34,0.021,65,3.107,96,3.919,97,3.541,98,2.783,136,3.107,155,3.919,160,3.541,214,2.783,272,2.913,314,4.891,577,3.541,578,4.466,605,2.783,679,3.541,680,4.199,681,4.199,682,4.199,683,5.801,684,4.199,685,4.199]]],"invertedIndex":[["",{"_index":16,"title":{},"body":{"guards/AdminGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/ClassConstructor.html":{},"classes/CreatePrescriptionDto.html":{},"classes/CreateUserDto.html":{},"injectables/CurrentUserInterceptor.html":{},"injectables/CurrentUserMiddleware.html":{},"classes/GetPrescriptionDto.html":{},"classes/MedicationDto.html":{},"classes/MedicationDto-1.html":{},"classes/MedicationDto-2.html":{},"classes/PatientDto.html":{},"classes/PatientDto-1.html":{},"entities/Prescription.html":{},"classes/PrescriptionDto.html":{},"controllers/PrescriptionsController.html":{},"modules/PrescriptionsModule.html":{},"injectables/PrescriptionsService.html":{},"interfaces/Request.html":{},"classes/SerializeInterceptor.html":{},"classes/UpdatePrescriptionDto.html":{},"entities/User.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":568,"title":{},"body":{"coverage.html":{}}}],["0.0.1",{"_index":677,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":601,"title":{},"body":{"dependencies.html":{}}}],["0.14.0",{"_index":592,"title":{},"body":{"dependencies.html":{}}}],["0.3.17",{"_index":603,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":591,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":571,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":569,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":572,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":574,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":575,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":579,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":576,"title":{},"body":{"coverage.html":{}}}],["06",{"_index":462,"title":{},"body":{"injectables/PrescriptionsService.html":{}}}],["1",{"_index":280,"title":{"classes/MedicationDto-1.html":{},"classes/PatientDto-1.html":{}},"body":{}}],["10.0.0",{"_index":583,"title":{},"body":{"dependencies.html":{}}}],["10t09:21:47.976z",{"_index":463,"title":{},"body":{"injectables/PrescriptionsService.html":{}}}],["12",{"_index":675,"title":{},"body":{"overview.html":{}}}],["1234",{"_index":458,"title":{},"body":{"injectables/PrescriptionsService.html":{}}}],["1342",{"_index":466,"title":{},"body":{"injectables/PrescriptionsService.html":{}}}],["18t09:21:47.976z",{"_index":468,"title":{},"body":{"injectables/PrescriptionsService.html":{}}}],["2",{"_index":291,"title":{"classes/MedicationDto-2.html":{}},"body":{"overview.html":{}}}],["2.0.0",{"_index":594,"title":{},"body":{"dependencies.html":{}}}],["2.0.2",{"_index":587,"title":{},"body":{"dependencies.html":{}}}],["2.0.44",{"_index":590,"title":{},"body":{"dependencies.html":{}}}],["2023",{"_index":461,"title":{},"body":{"injectables/PrescriptionsService.html":{}}}],["27017",{"_index":112,"title":{},"body":{"modules/AppModule.html":{}}}],["3",{"_index":673,"title":{},"body":{"overview.html":{}}}],["3.0.0",{"_index":584,"title":{},"body":{"dependencies.html":{}}}],["32",{"_index":175,"title":{},"body":{"injectables/AuthService.html":{}}}],["5.7.0",{"_index":598,"title":{},"body":{"dependencies.html":{}}}],["6",{"_index":674,"title":{},"body":{"overview.html":{}}}],["7.0.3",{"_index":597,"title":{},"body":{"dependencies.html":{}}}],["7.8.1",{"_index":602,"title":{},"body":{"dependencies.html":{}}}],["9.0.0",{"_index":604,"title":{},"body":{"dependencies.html":{}}}],["_id",{"_index":303,"title":{},"body":{"entities/Prescription.html":{}}}],["_scrypt",{"_index":156,"title":{},"body":{"injectables/AuthService.html":{}}}],["addtoexternalserver",{"_index":333,"title":{},"body":{"entities/Prescription.html":{}}}],["adminguard",{"_index":1,"title":{"guards/AdminGuard.html":{}},"body":{"guards/AdminGuard.html":{},"controllers/PrescriptionsController.html":{},"coverage.html":{}}}],["afterinsert",{"_index":321,"title":{},"body":{"entities/Prescription.html":{}}}],["afterupdate",{"_index":322,"title":{},"body":{"entities/Prescription.html":{}}}],["amazing",{"_index":653,"title":{},"body":{"index.html":{}}}],["api",{"_index":337,"title":{},"body":{"entities/Prescription.html":{},"controllers/PrescriptionsController.html":{},"injectables/PrescriptionsService.html":{}}}],["api.service",{"_index":436,"title":{},"body":{"injectables/PrescriptionsService.html":{}}}],["apidata",{"_index":397,"title":{},"body":{"controllers/PrescriptionsController.html":{}}}],["app",{"_index":630,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":81,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":44,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["app_pipe",{"_index":74,"title":{},"body":{"modules/AppModule.html":{}}}],["appcontroller",{"_index":36,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":618,"title":{},"body":{"index.html":{}}}],["apply",{"_index":121,"title":{},"body":{"modules/AppModule.html":{}}}],["appmodule",{"_index":49,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":43,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["args",{"_index":202,"title":{},"body":{"interfaces/ClassConstructor.html":{},"classes/SerializeInterceptor.html":{}}}],["arrayminsize",{"_index":288,"title":{},"body":{"classes/MedicationDto-1.html":{},"classes/PatientDto-1.html":{},"classes/PrescriptionDto.html":{}}}],["arrayminsize(1",{"_index":290,"title":{},"body":{"classes/MedicationDto-1.html":{},"classes/PatientDto-1.html":{},"classes/PrescriptionDto.html":{}}}],["arraynotempty",{"_index":287,"title":{},"body":{"classes/MedicationDto-1.html":{},"classes/PatientDto-1.html":{},"classes/PrescriptionDto.html":{}}}],["assign",{"_index":327,"title":{},"body":{"entities/Prescription.html":{}}}],["async",{"_index":137,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CurrentUserInterceptor.html":{},"injectables/CurrentUserMiddleware.html":{},"controllers/PrescriptionsController.html":{},"injectables/PrescriptionsService.html":{},"interfaces/Request.html":{},"controllers/UsersController.html":{}}}],["attrs",{"_index":432,"title":{},"body":{"injectables/PrescriptionsService.html":{}}}],["auth",{"_index":503,"title":{},"body":{"controllers/UsersController.html":{}}}],["auth.service",{"_index":525,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["authguard",{"_index":131,"title":{"guards/AuthGuard.html":{}},"body":{"guards/AuthGuard.html":{},"controllers/PrescriptionsController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["author",{"_index":661,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authservice",{"_index":135,"title":{"injectables/AuthService.html":{}},"body":{"injectables/AuthService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{},"overview.html":{}}}],["await",{"_index":164,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CurrentUserInterceptor.html":{},"injectables/CurrentUserMiddleware.html":{},"controllers/PrescriptionsController.html":{},"injectables/PrescriptionsService.html":{},"interfaces/Request.html":{},"controllers/UsersController.html":{}}}],["backers",{"_index":654,"title":{},"body":{"index.html":{}}}],["badrequestexception",{"_index":151,"title":{},"body":{"injectables/AuthService.html":{}}}],["badrequestexception('bad",{"_index":188,"title":{},"body":{"injectables/AuthService.html":{}}}],["badrequestexception('email",{"_index":168,"title":{},"body":{"injectables/AuthService.html":{}}}],["based",{"_index":621,"title":{},"body":{"index.html":{}}}],["bd",{"_index":470,"title":{},"body":{"injectables/PrescriptionsService.html":{}}}],["before",{"_index":329,"title":{},"body":{"entities/Prescription.html":{}}}],["beforeinsert",{"_index":320,"title":{},"body":{"entities/Prescription.html":{}}}],["body",{"_index":365,"title":{},"body":{"controllers/PrescriptionsController.html":{},"controllers/UsersController.html":{}}}],["body.password",{"_index":536,"title":{},"body":{"controllers/UsersController.html":{}}}],["bootstrap",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"modules/PrescriptionsModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":671,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":669,"title":{},"body":{"modules.html":{}}}],["buffer",{"_index":176,"title":{},"body":{"injectables/AuthService.html":{}}}],["building",{"_index":614,"title":{},"body":{"index.html":{}}}],["call",{"_index":334,"title":{},"body":{"entities/Prescription.html":{}}}],["callhandler",{"_index":195,"title":{},"body":{"interfaces/ClassConstructor.html":{},"injectables/CurrentUserInterceptor.html":{},"classes/SerializeInterceptor.html":{}}}],["canactivate",{"_index":8,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{}}}],["canactivate(context",{"_index":11,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{}}}],["changed",{"_index":476,"title":{},"body":{"injectables/PrescriptionsService.html":{}}}],["class",{"_index":25,"title":{"classes/CreatePrescriptionDto.html":{},"classes/CreateUserDto.html":{},"classes/GetPrescriptionDto.html":{},"classes/MedicationDto.html":{},"classes/MedicationDto-1.html":{},"classes/MedicationDto-2.html":{},"classes/PatientDto.html":{},"classes/PatientDto-1.html":{},"classes/PrescriptionDto.html":{},"classes/SerializeInterceptor.html":{},"classes/UpdatePrescriptionDto.html":{},"classes/UserDto.html":{}},"body":{"guards/AdminGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/ClassConstructor.html":{},"classes/CreatePrescriptionDto.html":{},"classes/CreateUserDto.html":{},"injectables/CurrentUserInterceptor.html":{},"injectables/CurrentUserMiddleware.html":{},"classes/GetPrescriptionDto.html":{},"classes/MedicationDto.html":{},"classes/MedicationDto-1.html":{},"classes/MedicationDto-2.html":{},"classes/PatientDto.html":{},"classes/PatientDto-1.html":{},"entities/Prescription.html":{},"classes/PrescriptionDto.html":{},"controllers/PrescriptionsController.html":{},"modules/PrescriptionsModule.html":{},"injectables/PrescriptionsService.html":{},"interfaces/Request.html":{},"classes/SerializeInterceptor.html":{},"classes/UpdatePrescriptionDto.html":{},"entities/User.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classconstructor",{"_index":190,"title":{"interfaces/ClassConstructor.html":{}},"body":{"interfaces/ClassConstructor.html":{},"classes/SerializeInterceptor.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["classes",{"_index":217,"title":{},"body":{"classes/CreatePrescriptionDto.html":{},"classes/CreateUserDto.html":{},"classes/GetPrescriptionDto.html":{},"classes/MedicationDto.html":{},"classes/MedicationDto-1.html":{},"classes/MedicationDto-2.html":{},"classes/PatientDto.html":{},"classes/PatientDto-1.html":{},"classes/PrescriptionDto.html":{},"classes/SerializeInterceptor.html":{},"classes/UpdatePrescriptionDto.html":{},"classes/UserDto.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":57,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":58,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":59,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_prescriptionsmodule",{"_index":408,"title":{},"body":{"modules/PrescriptionsModule.html":{},"overview.html":{}}}],["cluster_prescriptionsmodule_providers",{"_index":409,"title":{},"body":{"modules/PrescriptionsModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":542,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_providers",{"_index":543,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["column",{"_index":308,"title":{},"body":{"entities/Prescription.html":{},"entities/User.html":{}}}],["column('jsonb",{"_index":313,"title":{},"body":{"entities/Prescription.html":{}}}],["config",{"_index":107,"title":{},"body":{"modules/AppModule.html":{}}}],["config.get('db_name",{"_index":114,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule",{"_index":78,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":99,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":79,"title":{},"body":{"modules/AppModule.html":{}}}],["configure",{"_index":67,"title":{},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{}}}],["configure(consumer",{"_index":68,"title":{},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{}}}],["console.log('now",{"_index":340,"title":{},"body":{"entities/Prescription.html":{}}}],["const",{"_index":26,"title":{},"body":{"guards/AdminGuard.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/CurrentUserInterceptor.html":{},"injectables/CurrentUserMiddleware.html":{},"controllers/PrescriptionsController.html":{},"injectables/PrescriptionsService.html":{},"interfaces/Request.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":140,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CurrentUserInterceptor.html":{},"injectables/CurrentUserMiddleware.html":{},"injectables/PrescriptionsService.html":{},"classes/SerializeInterceptor.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["constructor(@injectrepository(user",{"_index":561,"title":{},"body":{"injectables/UsersService.html":{}}}],["constructor(dto",{"_index":487,"title":{},"body":{"classes/SerializeInterceptor.html":{}}}],["constructor(private",{"_index":45,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"interfaces/ClassConstructor.html":{},"injectables/CurrentUserInterceptor.html":{},"injectables/CurrentUserMiddleware.html":{},"controllers/PrescriptionsController.html":{},"interfaces/Request.html":{},"classes/SerializeInterceptor.html":{}}}],["constructor(repo",{"_index":417,"title":{},"body":{"injectables/PrescriptionsService.html":{},"injectables/UsersService.html":{}}}],["constructor(usersservice",{"_index":141,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CurrentUserInterceptor.html":{},"injectables/CurrentUserMiddleware.html":{}}}],["consumer",{"_index":71,"title":{},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{}}}],["consumer.apply(currentusermiddleware).forroutes",{"_index":550,"title":{},"body":{"modules/UsersModule.html":{}}}],["context",{"_index":20,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"injectables/CurrentUserInterceptor.html":{},"classes/SerializeInterceptor.html":{},"miscellaneous/variables.html":{}}}],["context.switchtohttp().getrequest",{"_index":28,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"injectables/CurrentUserInterceptor.html":{},"miscellaneous/variables.html":{}}}],["controller",{"_index":35,"title":{"controllers/AppController.html":{},"controllers/PrescriptionsController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/AppController.html":{},"controllers/PrescriptionsController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":527,"title":{},"body":{"controllers/UsersController.html":{}}}],["controller('prescriptions",{"_index":391,"title":{},"body":{"controllers/PrescriptionsController.html":{}}}],["controllers",{"_index":37,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/PrescriptionsController.html":{},"modules/PrescriptionsModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["cookie",{"_index":593,"title":{},"body":{"dependencies.html":{}}}],["cookiesession",{"_index":96,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["coverage",{"_index":564,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":181,"title":{},"body":{"injectables/AuthService.html":{},"injectables/PrescriptionsService.html":{},"injectables/UsersService.html":{}}}],["create(email",{"_index":555,"title":{},"body":{"injectables/UsersService.html":{}}}],["create(prescriptiondto",{"_index":421,"title":{},"body":{"injectables/PrescriptionsService.html":{}}}],["createparamdecorator",{"_index":684,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createprescription",{"_index":360,"title":{},"body":{"controllers/PrescriptionsController.html":{}}}],["createprescription(@body",{"_index":404,"title":{},"body":{"controllers/PrescriptionsController.html":{}}}],["createprescription(body",{"_index":363,"title":{},"body":{"controllers/PrescriptionsController.html":{}}}],["createprescriptiondto",{"_index":216,"title":{"classes/CreatePrescriptionDto.html":{}},"body":{"classes/CreatePrescriptionDto.html":{},"classes/MedicationDto.html":{},"classes/PatientDto.html":{},"controllers/PrescriptionsController.html":{},"injectables/PrescriptionsService.html":{},"coverage.html":{}}}],["createuser",{"_index":504,"title":{},"body":{"controllers/UsersController.html":{}}}],["createuser(@body",{"_index":534,"title":{},"body":{"controllers/UsersController.html":{}}}],["createuser(body",{"_index":508,"title":{},"body":{"controllers/UsersController.html":{}}}],["createuserdto",{"_index":240,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["cross",{"_index":595,"title":{},"body":{"dependencies.html":{}}}],["crypto",{"_index":157,"title":{},"body":{"injectables/AuthService.html":{}}}],["currently",{"_index":453,"title":{},"body":{"injectables/PrescriptionsService.html":{}}}],["currentuser",{"_index":272,"title":{},"body":{"injectables/CurrentUserMiddleware.html":{},"controllers/PrescriptionsController.html":{},"interfaces/Request.html":{},"controllers/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["currentuserinterceptor",{"_index":246,"title":{"injectables/CurrentUserInterceptor.html":{}},"body":{"injectables/CurrentUserInterceptor.html":{},"coverage.html":{}}}],["currentusermiddleware",{"_index":256,"title":{"injectables/CurrentUserMiddleware.html":{}},"body":{"injectables/CurrentUserMiddleware.html":{},"interfaces/Request.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["data",{"_index":214,"title":{},"body":{"interfaces/ClassConstructor.html":{},"entities/Prescription.html":{},"classes/SerializeInterceptor.html":{},"miscellaneous/variables.html":{}}}],["database",{"_index":113,"title":{},"body":{"modules/AppModule.html":{},"controllers/PrescriptionsController.html":{},"injectables/PrescriptionsService.html":{}}}],["date",{"_index":221,"title":{},"body":{"classes/CreatePrescriptionDto.html":{},"classes/MedicationDto.html":{},"classes/MedicationDto-1.html":{},"classes/MedicationDto-2.html":{},"classes/PatientDto.html":{},"classes/PatientDto-1.html":{},"entities/Prescription.html":{},"classes/PrescriptionDto.html":{},"injectables/PrescriptionsService.html":{},"classes/UpdatePrescriptionDto.html":{}}}],["declarations",{"_index":53,"title":{},"body":{"modules/AppModule.html":{},"modules/PrescriptionsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["declare",{"_index":269,"title":{},"body":{"injectables/CurrentUserMiddleware.html":{},"interfaces/Request.html":{}}}],["decorators",{"_index":40,"title":{},"body":{"controllers/AppController.html":{},"classes/CreatePrescriptionDto.html":{},"classes/CreateUserDto.html":{},"classes/GetPrescriptionDto.html":{},"classes/MedicationDto.html":{},"classes/MedicationDto-1.html":{},"classes/MedicationDto-2.html":{},"classes/PatientDto.html":{},"classes/PatientDto-1.html":{},"entities/Prescription.html":{},"classes/PrescriptionDto.html":{},"controllers/PrescriptionsController.html":{},"classes/UpdatePrescriptionDto.html":{},"entities/User.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{}}}],["decorators/current",{"_index":526,"title":{},"body":{"controllers/UsersController.html":{}}}],["default",{"_index":314,"title":{},"body":{"entities/Prescription.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":13,"title":{},"body":{"guards/AdminGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/CreatePrescriptionDto.html":{},"classes/CreateUserDto.html":{},"injectables/CurrentUserInterceptor.html":{},"injectables/CurrentUserMiddleware.html":{},"classes/GetPrescriptionDto.html":{},"classes/MedicationDto.html":{},"classes/MedicationDto-1.html":{},"classes/MedicationDto-2.html":{},"classes/PatientDto.html":{},"classes/PatientDto-1.html":{},"entities/Prescription.html":{},"classes/PrescriptionDto.html":{},"controllers/PrescriptionsController.html":{},"injectables/PrescriptionsService.html":{},"classes/SerializeInterceptor.html":{},"classes/UpdatePrescriptionDto.html":{},"entities/User.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["dependencies",{"_index":51,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/PrescriptionsModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["depends",{"_index":450,"title":{},"body":{"injectables/PrescriptionsService.html":{}}}],["description",{"_index":619,"title":{},"body":{"index.html":{},"properties.html":{}}}],["design",{"_index":625,"title":{},"body":{"index.html":{}}}],["development",{"_index":631,"title":{},"body":{"index.html":{}}}],["diagram",{"_index":626,"title":{},"body":{"index.html":{}}}],["disable",{"_index":89,"title":{},"body":{"modules/AppModule.html":{},"injectables/CurrentUserMiddleware.html":{},"interfaces/Request.html":{}}}],["documentation",{"_index":565,"title":{},"body":{"coverage.html":{}}}],["dose",{"_index":238,"title":{},"body":{"classes/CreatePrescriptionDto.html":{},"classes/MedicationDto.html":{},"classes/MedicationDto-1.html":{},"classes/MedicationDto-2.html":{},"classes/PatientDto.html":{},"classes/PatientDto-1.html":{},"entities/Prescription.html":{},"classes/PrescriptionDto.html":{},"injectables/PrescriptionsService.html":{},"classes/UpdatePrescriptionDto.html":{}}}],["dto",{"_index":208,"title":{},"body":{"interfaces/ClassConstructor.html":{},"classes/SerializeInterceptor.html":{},"miscellaneous/functions.html":{}}}],["dtos/create",{"_index":374,"title":{},"body":{"controllers/PrescriptionsController.html":{},"injectables/PrescriptionsService.html":{},"controllers/UsersController.html":{}}}],["dtos/get",{"_index":387,"title":{},"body":{"controllers/PrescriptionsController.html":{}}}],["dtos/prescription.dto",{"_index":382,"title":{},"body":{"controllers/PrescriptionsController.html":{}}}],["dtos/update",{"_index":385,"title":{},"body":{"controllers/PrescriptionsController.html":{},"injectables/PrescriptionsService.html":{}}}],["dtos/user.dto",{"_index":524,"title":{},"body":{"controllers/UsersController.html":{}}}],["e2e",{"_index":642,"title":{},"body":{"index.html":{}}}],["each",{"_index":239,"title":{},"body":{"classes/CreatePrescriptionDto.html":{},"classes/MedicationDto.html":{},"classes/MedicationDto-1.html":{},"classes/MedicationDto-2.html":{},"classes/PatientDto.html":{},"classes/PatientDto-1.html":{},"classes/PrescriptionDto.html":{},"classes/UpdatePrescriptionDto.html":{}}}],["efficient",{"_index":615,"title":{},"body":{"index.html":{}}}],["email",{"_index":147,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"entities/User.html":{},"classes/UserDto.html":{},"injectables/UsersService.html":{}}}],["entities",{"_index":116,"title":{},"body":{"modules/AppModule.html":{},"entities/Prescription.html":{},"entities/User.html":{},"overview.html":{}}}],["entity",{"_index":301,"title":{"entities/Prescription.html":{},"entities/User.html":{}},"body":{"entities/Prescription.html":{},"entities/User.html":{},"coverage.html":{}}}],["env",{"_index":596,"title":{},"body":{"dependencies.html":{}}}],["env.${process.env.node_env",{"_index":103,"title":{},"body":{"modules/AppModule.html":{}}}],["envfilepath",{"_index":102,"title":{},"body":{"modules/AppModule.html":{}}}],["eslint",{"_index":88,"title":{},"body":{"modules/AppModule.html":{},"injectables/CurrentUserMiddleware.html":{},"interfaces/Request.html":{}}}],["eslint/no",{"_index":93,"title":{},"body":{"modules/AppModule.html":{},"injectables/CurrentUserMiddleware.html":{},"interfaces/Request.html":{}}}],["estimate.dto",{"_index":390,"title":{},"body":{"controllers/PrescriptionsController.html":{}}}],["excludeextraneousvalues",{"_index":215,"title":{},"body":{"interfaces/ClassConstructor.html":{},"classes/SerializeInterceptor.html":{}}}],["executioncontext",{"_index":12,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"interfaces/ClassConstructor.html":{},"injectables/CurrentUserInterceptor.html":{},"classes/SerializeInterceptor.html":{},"miscellaneous/variables.html":{}}}],["exist",{"_index":484,"title":{},"body":{"injectables/PrescriptionsService.html":{}}}],["existing",{"_index":473,"title":{},"body":{"injectables/PrescriptionsService.html":{}}}],["existingprescription",{"_index":474,"title":{},"body":{"injectables/PrescriptionsService.html":{}}}],["existingprescription.date",{"_index":477,"title":{},"body":{"injectables/PrescriptionsService.html":{}}}],["existingprescription.medications",{"_index":481,"title":{},"body":{"injectables/PrescriptionsService.html":{}}}],["existingprescription.patient",{"_index":479,"title":{},"body":{"injectables/PrescriptionsService.html":{}}}],["export",{"_index":24,"title":{},"body":{"guards/AdminGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/ClassConstructor.html":{},"classes/CreatePrescriptionDto.html":{},"classes/CreateUserDto.html":{},"injectables/CurrentUserInterceptor.html":{},"injectables/CurrentUserMiddleware.html":{},"classes/GetPrescriptionDto.html":{},"classes/MedicationDto.html":{},"classes/MedicationDto-1.html":{},"classes/MedicationDto-2.html":{},"classes/PatientDto.html":{},"classes/PatientDto-1.html":{},"entities/Prescription.html":{},"classes/PrescriptionDto.html":{},"controllers/PrescriptionsController.html":{},"modules/PrescriptionsModule.html":{},"injectables/PrescriptionsService.html":{},"interfaces/Request.html":{},"classes/SerializeInterceptor.html":{},"classes/UpdatePrescriptionDto.html":{},"entities/User.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["exports",{"_index":56,"title":{},"body":{"modules/AppModule.html":{},"modules/PrescriptionsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["expose",{"_index":285,"title":{},"body":{"classes/MedicationDto-1.html":{},"classes/PatientDto-1.html":{},"classes/PrescriptionDto.html":{},"classes/UserDto.html":{}}}],["expose()@isstring()@isnotempty",{"_index":348,"title":{},"body":{"classes/PrescriptionDto.html":{}}}],["expose()@validatenested()@isnotempty",{"_index":354,"title":{},"body":{"classes/PrescriptionDto.html":{}}}],["expose()@validatenested({each",{"_index":351,"title":{},"body":{"classes/PrescriptionDto.html":{}}}],["express",{"_index":267,"title":{},"body":{"injectables/CurrentUserMiddleware.html":{},"interfaces/Request.html":{},"dependencies.html":{}}}],["external",{"_index":336,"title":{},"body":{"entities/Prescription.html":{},"controllers/PrescriptionsController.html":{},"injectables/PrescriptionsService.html":{}}}],["externalapiservice",{"_index":435,"title":{},"body":{"injectables/PrescriptionsService.html":{}}}],["fake",{"_index":455,"title":{},"body":{"injectables/PrescriptionsService.html":{}}}],["false",{"_index":31,"title":{},"body":{"guards/AdminGuard.html":{}}}],["fetch",{"_index":396,"title":{},"body":{"controllers/PrescriptionsController.html":{},"injectables/PrescriptionsService.html":{}}}],["fetchprescriptionsfromexternalapi",{"_index":414,"title":{},"body":{"injectables/PrescriptionsService.html":{}}}],["fetchprescriptionsfromexternalapi(nhi",{"_index":423,"title":{},"body":{"injectables/PrescriptionsService.html":{}}}],["fhir",{"_index":622,"title":{},"body":{"index.html":{}}}],["fhirsalt",{"_index":123,"title":{},"body":{"modules/AppModule.html":{}}}],["field",{"_index":328,"title":{},"body":{"entities/Prescription.html":{}}}],["file",{"_index":5,"title":{},"body":{"guards/AdminGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/ClassConstructor.html":{},"classes/CreatePrescriptionDto.html":{},"classes/CreateUserDto.html":{},"injectables/CurrentUserInterceptor.html":{},"injectables/CurrentUserMiddleware.html":{},"classes/GetPrescriptionDto.html":{},"classes/MedicationDto.html":{},"classes/MedicationDto-1.html":{},"classes/MedicationDto-2.html":{},"classes/PatientDto.html":{},"classes/PatientDto-1.html":{},"entities/Prescription.html":{},"classes/PrescriptionDto.html":{},"controllers/PrescriptionsController.html":{},"modules/PrescriptionsModule.html":{},"injectables/PrescriptionsService.html":{},"interfaces/Request.html":{},"classes/SerializeInterceptor.html":{},"classes/UpdatePrescriptionDto.html":{},"entities/User.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["find",{"_index":472,"title":{},"body":{"injectables/PrescriptionsService.html":{},"injectables/UsersService.html":{}}}],["find(email",{"_index":557,"title":{},"body":{"injectables/UsersService.html":{}}}],["findbypatientnhi",{"_index":415,"title":{},"body":{"injectables/PrescriptionsService.html":{}}}],["findbypatientnhi(undefined",{"_index":426,"title":{},"body":{"injectables/PrescriptionsService.html":{}}}],["findone",{"_index":552,"title":{},"body":{"injectables/UsersService.html":{}}}],["findone(id",{"_index":559,"title":{},"body":{"injectables/UsersService.html":{}}}],["finduser",{"_index":505,"title":{},"body":{"controllers/UsersController.html":{}}}],["finduser(@param('id",{"_index":540,"title":{},"body":{"controllers/UsersController.html":{}}}],["finduser(id",{"_index":511,"title":{},"body":{"controllers/UsersController.html":{}}}],["forroutes",{"_index":124,"title":{},"body":{"modules/AppModule.html":{}}}],["found",{"_index":185,"title":{},"body":{"injectables/AuthService.html":{},"injectables/PrescriptionsService.html":{},"controllers/UsersController.html":{}}}],["framework",{"_index":613,"title":{},"body":{"index.html":{}}}],["function",{"_index":203,"title":{},"body":{"interfaces/ClassConstructor.html":{},"classes/SerializeInterceptor.html":{},"coverage.html":{}}}],["functions",{"_index":606,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["generate",{"_index":170,"title":{},"body":{"injectables/AuthService.html":{}}}],["generateid",{"_index":331,"title":{},"body":{"entities/Prescription.html":{}}}],["get('/:id",{"_index":512,"title":{},"body":{"controllers/UsersController.html":{}}}],["get('/whoami",{"_index":529,"title":{},"body":{"controllers/UsersController.html":{}}}],["get('/whoami')@useguards(authguard",{"_index":521,"title":{},"body":{"controllers/UsersController.html":{}}}],["getestimatedto",{"_index":389,"title":{},"body":{"controllers/PrescriptionsController.html":{}}}],["gethello",{"_index":39,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getprescriptiondto",{"_index":275,"title":{"classes/GetPrescriptionDto.html":{}},"body":{"classes/GetPrescriptionDto.html":{},"controllers/PrescriptionsController.html":{},"coverage.html":{}}}],["getprescriptionsbynhi",{"_index":361,"title":{},"body":{"controllers/PrescriptionsController.html":{}}}],["getprescriptionsbynhi(@query",{"_index":395,"title":{},"body":{"controllers/PrescriptionsController.html":{}}}],["getprescriptionsbynhi(undefined",{"_index":366,"title":{},"body":{"controllers/PrescriptionsController.html":{}}}],["getting",{"_index":609,"title":{"index.html":{}},"body":{}}],["global",{"_index":270,"title":{},"body":{"injectables/CurrentUserMiddleware.html":{},"interfaces/Request.html":{}}}],["going",{"_index":454,"title":{},"body":{"injectables/PrescriptionsService.html":{}}}],["grow",{"_index":649,"title":{},"body":{"index.html":{}}}],["guard",{"_index":0,"title":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{}},"body":{"coverage.html":{}}}],["guards",{"_index":2,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"overview.html":{}}}],["guards/admin.guard",{"_index":388,"title":{},"body":{"controllers/PrescriptionsController.html":{}}}],["guards/auth.guard",{"_index":378,"title":{},"body":{"controllers/PrescriptionsController.html":{},"controllers/UsersController.html":{}}}],["handler",{"_index":210,"title":{},"body":{"interfaces/ClassConstructor.html":{},"injectables/CurrentUserInterceptor.html":{},"classes/SerializeInterceptor.html":{}}}],["handler.handle",{"_index":255,"title":{},"body":{"injectables/CurrentUserInterceptor.html":{}}}],["handler.handle().pipe",{"_index":211,"title":{},"body":{"interfaces/ClassConstructor.html":{},"classes/SerializeInterceptor.html":{}}}],["hash",{"_index":169,"title":{},"body":{"injectables/AuthService.html":{}}}],["hash.tostring('hex",{"_index":180,"title":{},"body":{"injectables/AuthService.html":{}}}],["hashed",{"_index":178,"title":{},"body":{"injectables/AuthService.html":{}}}],["hello",{"_index":129,"title":{},"body":{"injectables/AppService.html":{}}}],["here",{"_index":338,"title":{},"body":{"entities/Prescription.html":{},"index.html":{}}}],["high",{"_index":623,"title":{},"body":{"index.html":{}}}],["host",{"_index":109,"title":{},"body":{"modules/AppModule.html":{}}}],["https://nestjs.com",{"_index":665,"title":{},"body":{"index.html":{}}}],["id",{"_index":237,"title":{},"body":{"classes/CreatePrescriptionDto.html":{},"classes/MedicationDto.html":{},"classes/MedicationDto-1.html":{},"classes/MedicationDto-2.html":{},"classes/PatientDto.html":{},"classes/PatientDto-1.html":{},"entities/Prescription.html":{},"classes/PrescriptionDto.html":{},"controllers/PrescriptionsController.html":{},"injectables/PrescriptionsService.html":{},"classes/UpdatePrescriptionDto.html":{},"entities/User.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["identifier",{"_index":566,"title":{},"body":{"coverage.html":{}}}],["implementation",{"_index":449,"title":{},"body":{"injectables/PrescriptionsService.html":{}}}],["implements",{"_index":7,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"interfaces/ClassConstructor.html":{},"injectables/CurrentUserInterceptor.html":{},"injectables/CurrentUserMiddleware.html":{},"interfaces/Request.html":{},"classes/SerializeInterceptor.html":{}}}],["import",{"_index":22,"title":{},"body":{"guards/AdminGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/ClassConstructor.html":{},"classes/CreatePrescriptionDto.html":{},"classes/CreateUserDto.html":{},"injectables/CurrentUserInterceptor.html":{},"injectables/CurrentUserMiddleware.html":{},"classes/GetPrescriptionDto.html":{},"classes/MedicationDto.html":{},"classes/MedicationDto-1.html":{},"classes/MedicationDto-2.html":{},"classes/PatientDto.html":{},"classes/PatientDto-1.html":{},"entities/Prescription.html":{},"classes/PrescriptionDto.html":{},"controllers/PrescriptionsController.html":{},"modules/PrescriptionsModule.html":{},"injectables/PrescriptionsService.html":{},"interfaces/Request.html":{},"classes/SerializeInterceptor.html":{},"classes/UpdatePrescriptionDto.html":{},"entities/User.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["imports",{"_index":66,"title":{},"body":{"modules/AppModule.html":{},"modules/PrescriptionsModule.html":{},"modules/UsersModule.html":{}}}],["index",{"_index":9,"title":{"index.html":{}},"body":{"guards/AdminGuard.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/CreatePrescriptionDto.html":{},"classes/CreateUserDto.html":{},"injectables/CurrentUserInterceptor.html":{},"injectables/CurrentUserMiddleware.html":{},"classes/GetPrescriptionDto.html":{},"classes/MedicationDto.html":{},"classes/MedicationDto-1.html":{},"classes/MedicationDto-2.html":{},"classes/PatientDto.html":{},"classes/PatientDto-1.html":{},"entities/Prescription.html":{},"classes/PrescriptionDto.html":{},"controllers/PrescriptionsController.html":{},"injectables/PrescriptionsService.html":{},"interfaces/Request.html":{},"classes/SerializeInterceptor.html":{},"classes/UpdatePrescriptionDto.html":{},"entities/User.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"guards/AdminGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/ClassConstructor.html":{},"classes/CreatePrescriptionDto.html":{},"classes/CreateUserDto.html":{},"injectables/CurrentUserInterceptor.html":{},"injectables/CurrentUserMiddleware.html":{},"classes/GetPrescriptionDto.html":{},"classes/MedicationDto.html":{},"classes/MedicationDto-1.html":{},"classes/MedicationDto-2.html":{},"classes/PatientDto.html":{},"classes/PatientDto-1.html":{},"entities/Prescription.html":{},"classes/PrescriptionDto.html":{},"controllers/PrescriptionsController.html":{},"modules/PrescriptionsModule.html":{},"injectables/PrescriptionsService.html":{},"interfaces/Request.html":{},"classes/SerializeInterceptor.html":{},"classes/UpdatePrescriptionDto.html":{},"entities/User.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["inject",{"_index":105,"title":{},"body":{"modules/AppModule.html":{}}}],["injectable",{"_index":125,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CurrentUserInterceptor.html":{},"injectables/CurrentUserMiddleware.html":{},"injectables/PrescriptionsService.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CurrentUserInterceptor.html":{},"injectables/CurrentUserMiddleware.html":{},"injectables/PrescriptionsService.html":{},"interfaces/Request.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":126,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CurrentUserInterceptor.html":{},"injectables/CurrentUserMiddleware.html":{},"injectables/PrescriptionsService.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["injectrepository",{"_index":434,"title":{},"body":{"injectables/PrescriptionsService.html":{},"injectables/UsersService.html":{}}}],["injectrepository(prescription",{"_index":437,"title":{},"body":{"injectables/PrescriptionsService.html":{}}}],["insert",{"_index":471,"title":{},"body":{"injectables/PrescriptionsService.html":{}}}],["insertion",{"_index":330,"title":{},"body":{"entities/Prescription.html":{}}}],["installation",{"_index":627,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":629,"title":{},"body":{"index.html":{}}}],["intercept",{"_index":249,"title":{},"body":{"injectables/CurrentUserInterceptor.html":{},"classes/SerializeInterceptor.html":{}}}],["intercept(context",{"_index":209,"title":{},"body":{"interfaces/ClassConstructor.html":{},"injectables/CurrentUserInterceptor.html":{},"classes/SerializeInterceptor.html":{}}}],["interceptors/serialize.interceptor",{"_index":384,"title":{},"body":{"controllers/PrescriptionsController.html":{},"controllers/UsersController.html":{}}}],["interface",{"_index":189,"title":{"interfaces/ClassConstructor.html":{},"interfaces/Request.html":{}},"body":{"interfaces/ClassConstructor.html":{},"injectables/CurrentUserMiddleware.html":{},"interfaces/Request.html":{},"classes/SerializeInterceptor.html":{},"coverage.html":{}}}],["interfaces",{"_index":191,"title":{},"body":{"interfaces/ClassConstructor.html":{},"interfaces/Request.html":{},"overview.html":{}}}],["isarray",{"_index":234,"title":{},"body":{"classes/CreatePrescriptionDto.html":{},"classes/MedicationDto.html":{},"classes/MedicationDto-2.html":{},"classes/PatientDto.html":{},"classes/UpdatePrescriptionDto.html":{}}}],["isarray()@validatenested({each",{"_index":227,"title":{},"body":{"classes/CreatePrescriptionDto.html":{},"classes/UpdatePrescriptionDto.html":{}}}],["isemail",{"_index":243,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isglobal",{"_index":100,"title":{},"body":{"modules/AppModule.html":{}}}],["isnotempty",{"_index":286,"title":{},"body":{"classes/MedicationDto-1.html":{},"classes/PatientDto-1.html":{},"classes/PrescriptionDto.html":{}}}],["isstring",{"_index":224,"title":{},"body":{"classes/CreatePrescriptionDto.html":{},"classes/CreateUserDto.html":{},"classes/GetPrescriptionDto.html":{},"classes/MedicationDto.html":{},"classes/MedicationDto-1.html":{},"classes/MedicationDto-2.html":{},"classes/PatientDto.html":{},"classes/PatientDto-1.html":{},"classes/PrescriptionDto.html":{},"classes/UpdatePrescriptionDto.html":{}}}],["isstring()@isnotempty",{"_index":282,"title":{},"body":{"classes/MedicationDto-1.html":{},"classes/PatientDto-1.html":{}}}],["jogn",{"_index":467,"title":{},"body":{"injectables/PrescriptionsService.html":{}}}],["join",{"_index":177,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["kamil",{"_index":662,"title":{},"body":{"index.html":{}}}],["keys",{"_index":122,"title":{},"body":{"modules/AppModule.html":{}}}],["legend",{"_index":52,"title":{},"body":{"modules/AppModule.html":{},"modules/PrescriptionsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["level",{"_index":624,"title":{},"body":{"index.html":{}}}],["license",{"_index":668,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":646,"title":{},"body":{"index.html":{}}}],["line",{"_index":91,"title":{},"body":{"modules/AppModule.html":{},"injectables/CurrentUserMiddleware.html":{},"interfaces/Request.html":{}}}],["literal",{"_index":312,"title":{},"body":{"entities/Prescription.html":{}}}],["local",{"_index":399,"title":{},"body":{"controllers/PrescriptionsController.html":{},"injectables/PrescriptionsService.html":{}}}],["localhost",{"_index":110,"title":{},"body":{"modules/AppModule.html":{}}}],["map",{"_index":198,"title":{},"body":{"interfaces/ClassConstructor.html":{},"classes/SerializeInterceptor.html":{}}}],["map((data",{"_index":212,"title":{},"body":{"interfaces/ClassConstructor.html":{},"classes/SerializeInterceptor.html":{}}}],["matching",{"_index":34,"title":{},"body":{"guards/AdminGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/ClassConstructor.html":{},"classes/CreatePrescriptionDto.html":{},"classes/CreateUserDto.html":{},"injectables/CurrentUserInterceptor.html":{},"injectables/CurrentUserMiddleware.html":{},"classes/GetPrescriptionDto.html":{},"classes/MedicationDto.html":{},"classes/MedicationDto-1.html":{},"classes/MedicationDto-2.html":{},"classes/PatientDto.html":{},"classes/PatientDto-1.html":{},"entities/Prescription.html":{},"classes/PrescriptionDto.html":{},"controllers/PrescriptionsController.html":{},"modules/PrescriptionsModule.html":{},"injectables/PrescriptionsService.html":{},"interfaces/Request.html":{},"classes/SerializeInterceptor.html":{},"classes/UpdatePrescriptionDto.html":{},"entities/User.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["med001",{"_index":464,"title":{},"body":{"injectables/PrescriptionsService.html":{}}}],["med401",{"_index":469,"title":{},"body":{"injectables/PrescriptionsService.html":{}}}],["medicationdto",{"_index":226,"title":{"classes/MedicationDto.html":{},"classes/MedicationDto-1.html":{},"classes/MedicationDto-2.html":{}},"body":{"classes/CreatePrescriptionDto.html":{},"classes/MedicationDto.html":{},"classes/MedicationDto-1.html":{},"classes/MedicationDto-2.html":{},"classes/PatientDto.html":{},"classes/PatientDto-1.html":{},"classes/PrescriptionDto.html":{},"classes/UpdatePrescriptionDto.html":{},"coverage.html":{}}}],["medications",{"_index":222,"title":{},"body":{"classes/CreatePrescriptionDto.html":{},"classes/MedicationDto.html":{},"classes/MedicationDto-1.html":{},"classes/MedicationDto-2.html":{},"classes/PatientDto.html":{},"classes/PatientDto-1.html":{},"entities/Prescription.html":{},"classes/PrescriptionDto.html":{},"injectables/PrescriptionsService.html":{},"classes/UpdatePrescriptionDto.html":{}}}],["metadata",{"_index":600,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":10,"title":{},"body":{"guards/AdminGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/CurrentUserInterceptor.html":{},"injectables/CurrentUserMiddleware.html":{},"controllers/PrescriptionsController.html":{},"injectables/PrescriptionsService.html":{},"classes/SerializeInterceptor.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["middlewareconsumer",{"_index":69,"title":{},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{}}}],["middlewares/current",{"_index":547,"title":{},"body":{"modules/UsersModule.html":{}}}],["miscellaneous",{"_index":605,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":645,"title":{},"body":{"index.html":{}}}],["mode",{"_index":635,"title":{},"body":{"index.html":{}}}],["module",{"_index":48,"title":{"modules/AppModule.html":{},"modules/PrescriptionsModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PrescriptionsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["modules",{"_index":50,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/PrescriptionsModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["mongodb",{"_index":108,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["mongorepository",{"_index":418,"title":{},"body":{"injectables/PrescriptionsService.html":{}}}],["more",{"_index":658,"title":{},"body":{"index.html":{}}}],["myśliwiec",{"_index":663,"title":{},"body":{"index.html":{}}}],["name",{"_index":17,"title":{},"body":{"guards/AdminGuard.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/CreatePrescriptionDto.html":{},"injectables/CurrentUserInterceptor.html":{},"injectables/CurrentUserMiddleware.html":{},"classes/MedicationDto.html":{},"classes/MedicationDto-1.html":{},"classes/PatientDto.html":{},"classes/PatientDto-1.html":{},"entities/Prescription.html":{},"classes/PrescriptionDto.html":{},"controllers/PrescriptionsController.html":{},"injectables/PrescriptionsService.html":{},"classes/SerializeInterceptor.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["namespace",{"_index":271,"title":{},"body":{"injectables/CurrentUserMiddleware.html":{},"interfaces/Request.html":{}}}],["need",{"_index":341,"title":{},"body":{"entities/Prescription.html":{}}}],["nest",{"_index":620,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":667,"title":{},"body":{"index.html":{}}}],["nestinterceptor",{"_index":194,"title":{},"body":{"interfaces/ClassConstructor.html":{},"injectables/CurrentUserInterceptor.html":{},"classes/SerializeInterceptor.html":{}}}],["nestjs/common",{"_index":23,"title":{},"body":{"guards/AdminGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/ClassConstructor.html":{},"injectables/CurrentUserInterceptor.html":{},"injectables/CurrentUserMiddleware.html":{},"controllers/PrescriptionsController.html":{},"modules/PrescriptionsModule.html":{},"injectables/PrescriptionsService.html":{},"interfaces/Request.html":{},"classes/SerializeInterceptor.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":80,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":75,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/mapped",{"_index":585,"title":{},"body":{"dependencies.html":{}}}],["nestjs/platform",{"_index":588,"title":{},"body":{"dependencies.html":{}}}],["nestjs/typeorm",{"_index":77,"title":{},"body":{"modules/AppModule.html":{},"modules/PrescriptionsModule.html":{},"injectables/PrescriptionsService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestmiddleware",{"_index":266,"title":{},"body":{"injectables/CurrentUserMiddleware.html":{},"interfaces/Request.html":{}}}],["never",{"_index":685,"title":{},"body":{"miscellaneous/variables.html":{}}}],["new",{"_index":119,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"interfaces/ClassConstructor.html":{},"controllers/PrescriptionsController.html":{},"injectables/PrescriptionsService.html":{},"classes/SerializeInterceptor.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["next",{"_index":90,"title":{},"body":{"modules/AppModule.html":{},"injectables/CurrentUserMiddleware.html":{},"interfaces/Request.html":{}}}],["nextfunction",{"_index":263,"title":{},"body":{"injectables/CurrentUserMiddleware.html":{},"interfaces/Request.html":{}}}],["nhi",{"_index":236,"title":{},"body":{"classes/CreatePrescriptionDto.html":{},"classes/GetPrescriptionDto.html":{},"classes/MedicationDto.html":{},"classes/MedicationDto-1.html":{},"classes/PatientDto.html":{},"classes/PatientDto-1.html":{},"entities/Prescription.html":{},"classes/PrescriptionDto.html":{},"controllers/PrescriptionsController.html":{},"injectables/PrescriptionsService.html":{}}}],["node.js",{"_index":612,"title":{},"body":{"index.html":{}}}],["notfoundexception",{"_index":152,"title":{},"body":{"injectables/AuthService.html":{},"injectables/PrescriptionsService.html":{},"controllers/UsersController.html":{}}}],["notfoundexception('prescription",{"_index":445,"title":{},"body":{"injectables/PrescriptionsService.html":{}}}],["notfoundexception('user",{"_index":184,"title":{},"body":{"injectables/AuthService.html":{},"controllers/UsersController.html":{}}}],["npm",{"_index":628,"title":{},"body":{"index.html":{}}}],["null",{"_index":533,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["number",{"_index":494,"title":{},"body":{"entities/User.html":{},"classes/UserDto.html":{},"injectables/UsersService.html":{}}}],["object.assign(prescription",{"_index":447,"title":{},"body":{"injectables/PrescriptionsService.html":{}}}],["objectid",{"_index":305,"title":{},"body":{"entities/Prescription.html":{},"controllers/PrescriptionsController.html":{}}}],["objectidcolumn",{"_index":306,"title":{},"body":{"entities/Prescription.html":{},"entities/User.html":{}}}],["observable",{"_index":196,"title":{},"body":{"interfaces/ClassConstructor.html":{},"classes/SerializeInterceptor.html":{}}}],["od",{"_index":465,"title":{},"body":{"injectables/PrescriptionsService.html":{}}}],["one",{"_index":485,"title":{},"body":{"injectables/PrescriptionsService.html":{}}}],["open",{"_index":647,"title":{},"body":{"index.html":{}}}],["optional",{"_index":19,"title":{},"body":{"guards/AdminGuard.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/CurrentUserInterceptor.html":{},"injectables/CurrentUserMiddleware.html":{},"controllers/PrescriptionsController.html":{},"injectables/PrescriptionsService.html":{},"interfaces/Request.html":{},"classes/SerializeInterceptor.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["out",{"_index":64,"title":{},"body":{"modules/AppModule.html":{},"modules/PrescriptionsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["overview",{"_index":672,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":582,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["param",{"_index":372,"title":{},"body":{"controllers/PrescriptionsController.html":{},"controllers/UsersController.html":{}}}],["param('id",{"_index":406,"title":{},"body":{"controllers/PrescriptionsController.html":{}}}],["parameters",{"_index":15,"title":{},"body":{"guards/AdminGuard.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/CurrentUserInterceptor.html":{},"injectables/CurrentUserMiddleware.html":{},"controllers/PrescriptionsController.html":{},"injectables/PrescriptionsService.html":{},"classes/SerializeInterceptor.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["partial",{"_index":429,"title":{},"body":{"injectables/PrescriptionsService.html":{}}}],["password",{"_index":145,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"entities/User.html":{},"injectables/UsersService.html":{}}}],["patch",{"_index":346,"title":{},"body":{"entities/Prescription.html":{},"controllers/PrescriptionsController.html":{}}}],["patch('/:id",{"_index":369,"title":{},"body":{"controllers/PrescriptionsController.html":{}}}],["patient",{"_index":223,"title":{},"body":{"classes/CreatePrescriptionDto.html":{},"classes/MedicationDto.html":{},"classes/MedicationDto-1.html":{},"classes/PatientDto.html":{},"classes/PatientDto-1.html":{},"entities/Prescription.html":{},"classes/PrescriptionDto.html":{},"injectables/PrescriptionsService.html":{}}}],["patient.nhi",{"_index":440,"title":{},"body":{"injectables/PrescriptionsService.html":{}}}],["patientdto",{"_index":230,"title":{"classes/PatientDto.html":{},"classes/PatientDto-1.html":{}},"body":{"classes/CreatePrescriptionDto.html":{},"classes/MedicationDto.html":{},"classes/MedicationDto-1.html":{},"classes/PatientDto.html":{},"classes/PatientDto-1.html":{},"classes/PrescriptionDto.html":{},"coverage.html":{}}}],["plaintoclass",{"_index":200,"title":{},"body":{"interfaces/ClassConstructor.html":{},"classes/SerializeInterceptor.html":{}}}],["plaintoclass(this.dto",{"_index":213,"title":{},"body":{"interfaces/ClassConstructor.html":{},"classes/SerializeInterceptor.html":{}}}],["please",{"_index":656,"title":{},"body":{"index.html":{}}}],["port",{"_index":111,"title":{},"body":{"modules/AppModule.html":{}}}],["post",{"_index":335,"title":{},"body":{"entities/Prescription.html":{},"controllers/PrescriptionsController.html":{},"controllers/UsersController.html":{}}}],["post('/signin",{"_index":515,"title":{},"body":{"controllers/UsersController.html":{}}}],["post('/signout",{"_index":518,"title":{},"body":{"controllers/UsersController.html":{}}}],["post('/signup",{"_index":509,"title":{},"body":{"controllers/UsersController.html":{}}}],["prefix",{"_index":358,"title":{},"body":{"controllers/PrescriptionsController.html":{},"controllers/UsersController.html":{}}}],["presciption",{"_index":441,"title":{},"body":{"injectables/PrescriptionsService.html":{}}}],["prescription",{"_index":86,"title":{"entities/Prescription.html":{}},"body":{"modules/AppModule.html":{},"entities/Prescription.html":{},"controllers/PrescriptionsController.html":{},"modules/PrescriptionsModule.html":{},"injectables/PrescriptionsService.html":{},"coverage.html":{}}}],["prescription.date",{"_index":478,"title":{},"body":{"injectables/PrescriptionsService.html":{}}}],["prescription.dto",{"_index":375,"title":{},"body":{"controllers/PrescriptionsController.html":{},"injectables/PrescriptionsService.html":{}}}],["prescription.dto.ts",{"_index":219,"title":{},"body":{"classes/CreatePrescriptionDto.html":{},"classes/GetPrescriptionDto.html":{},"classes/MedicationDto.html":{},"classes/PatientDto.html":{},"coverage.html":{}}}],["prescription.dto.ts:14",{"_index":279,"title":{},"body":{"classes/MedicationDto.html":{}}}],["prescription.dto.ts:17",{"_index":278,"title":{},"body":{"classes/MedicationDto.html":{}}}],["prescription.dto.ts:23",{"_index":232,"title":{},"body":{"classes/CreatePrescriptionDto.html":{}}}],["prescription.dto.ts:26",{"_index":225,"title":{},"body":{"classes/CreatePrescriptionDto.html":{}}}],["prescription.dto.ts:31",{"_index":229,"title":{},"body":{"classes/CreatePrescriptionDto.html":{}}}],["prescription.dto.ts:5",{"_index":277,"title":{},"body":{"classes/GetPrescriptionDto.html":{}}}],["prescription.dto.ts:6",{"_index":298,"title":{},"body":{"classes/PatientDto.html":{}}}],["prescription.dto.ts:9",{"_index":297,"title":{},"body":{"classes/PatientDto.html":{}}}],["prescription.entity",{"_index":381,"title":{},"body":{"controllers/PrescriptionsController.html":{},"modules/PrescriptionsModule.html":{},"injectables/PrescriptionsService.html":{}}}],["prescription.medications",{"_index":482,"title":{},"body":{"injectables/PrescriptionsService.html":{}}}],["prescription.patient",{"_index":480,"title":{},"body":{"injectables/PrescriptionsService.html":{}}}],["prescription.resourceid",{"_index":475,"title":{},"body":{"injectables/PrescriptionsService.html":{}}}],["prescriptiondto",{"_index":289,"title":{"classes/PrescriptionDto.html":{}},"body":{"classes/MedicationDto-1.html":{},"classes/PatientDto-1.html":{},"classes/PrescriptionDto.html":{},"controllers/PrescriptionsController.html":{},"injectables/PrescriptionsService.html":{},"coverage.html":{}}}],["prescriptions",{"_index":359,"title":{},"body":{"controllers/PrescriptionsController.html":{},"injectables/PrescriptionsService.html":{}}}],["prescriptions.controller",{"_index":411,"title":{},"body":{"modules/PrescriptionsModule.html":{}}}],["prescriptions.dto",{"_index":386,"title":{},"body":{"controllers/PrescriptionsController.html":{},"injectables/PrescriptionsService.html":{}}}],["prescriptions.dto.ts",{"_index":293,"title":{},"body":{"classes/MedicationDto-2.html":{},"classes/UpdatePrescriptionDto.html":{},"coverage.html":{}}}],["prescriptions.dto.ts:11",{"_index":491,"title":{},"body":{"classes/UpdatePrescriptionDto.html":{}}}],["prescriptions.dto.ts:16",{"_index":295,"title":{},"body":{"classes/MedicationDto-2.html":{}}}],["prescriptions.dto.ts:19",{"_index":294,"title":{},"body":{"classes/MedicationDto-2.html":{}}}],["prescriptions.dto.ts:6",{"_index":490,"title":{},"body":{"classes/UpdatePrescriptionDto.html":{}}}],["prescriptions.service",{"_index":377,"title":{},"body":{"controllers/PrescriptionsController.html":{},"modules/PrescriptionsModule.html":{}}}],["prescriptions/prescription.entity",{"_index":87,"title":{},"body":{"modules/AppModule.html":{}}}],["prescriptions/prescriptions.module",{"_index":83,"title":{},"body":{"modules/AppModule.html":{}}}],["prescriptionscontroller",{"_index":356,"title":{"controllers/PrescriptionsController.html":{}},"body":{"controllers/PrescriptionsController.html":{},"modules/PrescriptionsModule.html":{},"coverage.html":{}}}],["prescriptionservice",{"_index":394,"title":{},"body":{"controllers/PrescriptionsController.html":{}}}],["prescriptionsmodule",{"_index":60,"title":{"modules/PrescriptionsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PrescriptionsModule.html":{},"modules.html":{},"overview.html":{}}}],["prescriptionsservice",{"_index":376,"title":{"injectables/PrescriptionsService.html":{}},"body":{"controllers/PrescriptionsController.html":{},"modules/PrescriptionsModule.html":{},"injectables/PrescriptionsService.html":{},"coverage.html":{},"overview.html":{}}}],["primarygeneratedcolumn",{"_index":319,"title":{},"body":{"entities/Prescription.html":{}}}],["primarygeneratedcolumn('uuid",{"_index":310,"title":{},"body":{"entities/Prescription.html":{}}}],["private",{"_index":438,"title":{},"body":{"injectables/PrescriptionsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["production",{"_index":637,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":611,"title":{},"body":{"index.html":{}}}],["project",{"_index":648,"title":{},"body":{"index.html":{}}}],["promise",{"_index":425,"title":{},"body":{"injectables/PrescriptionsService.html":{}}}],["promisify",{"_index":158,"title":{},"body":{"injectables/AuthService.html":{}}}],["promisify(_scrypt",{"_index":160,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["properties",{"_index":220,"title":{"properties.html":{}},"body":{"classes/CreatePrescriptionDto.html":{},"classes/CreateUserDto.html":{},"classes/GetPrescriptionDto.html":{},"classes/MedicationDto.html":{},"classes/MedicationDto-1.html":{},"classes/MedicationDto-2.html":{},"classes/PatientDto.html":{},"classes/PatientDto-1.html":{},"entities/Prescription.html":{},"classes/PrescriptionDto.html":{},"interfaces/Request.html":{},"classes/UpdatePrescriptionDto.html":{},"entities/User.html":{},"classes/UserDto.html":{},"properties.html":{}}}],["provide",{"_index":117,"title":{},"body":{"modules/AppModule.html":{}}}],["providers",{"_index":55,"title":{},"body":{"modules/AppModule.html":{},"modules/PrescriptionsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["pt123432",{"_index":459,"title":{},"body":{"injectables/PrescriptionsService.html":{}}}],["push",{"_index":342,"title":{},"body":{"entities/Prescription.html":{}}}],["query",{"_index":373,"title":{},"body":{"controllers/PrescriptionsController.html":{}}}],["randombytes",{"_index":154,"title":{},"body":{"injectables/AuthService.html":{}}}],["randombytes(8).tostring('hex",{"_index":172,"title":{},"body":{"injectables/AuthService.html":{}}}],["read",{"_index":657,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":46,"title":{},"body":{"controllers/AppController.html":{}}}],["record",{"_index":343,"title":{},"body":{"entities/Prescription.html":{}}}],["records",{"_index":456,"title":{},"body":{"injectables/PrescriptionsService.html":{}}}],["reflect",{"_index":599,"title":{},"body":{"dependencies.html":{}}}],["repo",{"_index":420,"title":{},"body":{"injectables/PrescriptionsService.html":{},"injectables/UsersService.html":{}}}],["repository",{"_index":553,"title":{},"body":{"injectables/UsersService.html":{},"index.html":{}}}],["req",{"_index":265,"title":{},"body":{"injectables/CurrentUserMiddleware.html":{}}}],["req.currentuser",{"_index":274,"title":{},"body":{"injectables/CurrentUserMiddleware.html":{},"interfaces/Request.html":{}}}],["req.session",{"_index":273,"title":{},"body":{"injectables/CurrentUserMiddleware.html":{},"interfaces/Request.html":{}}}],["request",{"_index":27,"title":{"interfaces/Request.html":{}},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"injectables/CurrentUserInterceptor.html":{},"injectables/CurrentUserMiddleware.html":{},"interfaces/Request.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["request.currentuser",{"_index":29,"title":{},"body":{"guards/AdminGuard.html":{},"injectables/CurrentUserInterceptor.html":{},"miscellaneous/variables.html":{}}}],["request.currentuser.admin",{"_index":32,"title":{},"body":{"guards/AdminGuard.html":{}}}],["request.session",{"_index":253,"title":{},"body":{"injectables/CurrentUserInterceptor.html":{}}}],["request.session.userid",{"_index":134,"title":{},"body":{"guards/AuthGuard.html":{}}}],["require('cookie",{"_index":97,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["requires",{"_index":95,"title":{},"body":{"modules/AppModule.html":{}}}],["res",{"_index":261,"title":{},"body":{"injectables/CurrentUserMiddleware.html":{},"interfaces/Request.html":{}}}],["reset",{"_index":63,"title":{},"body":{"modules/AppModule.html":{},"modules/PrescriptionsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["resourceid",{"_index":304,"title":{},"body":{"entities/Prescription.html":{},"injectables/PrescriptionsService.html":{}}}],["response",{"_index":262,"title":{},"body":{"injectables/CurrentUserMiddleware.html":{},"interfaces/Request.html":{}}}],["result",{"_index":179,"title":{},"body":{"injectables/AuthService.html":{}}}],["results",{"_index":33,"title":{},"body":{"guards/AdminGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/ClassConstructor.html":{},"classes/CreatePrescriptionDto.html":{},"classes/CreateUserDto.html":{},"injectables/CurrentUserInterceptor.html":{},"injectables/CurrentUserMiddleware.html":{},"classes/GetPrescriptionDto.html":{},"classes/MedicationDto.html":{},"classes/MedicationDto-1.html":{},"classes/MedicationDto-2.html":{},"classes/PatientDto.html":{},"classes/PatientDto-1.html":{},"entities/Prescription.html":{},"classes/PrescriptionDto.html":{},"controllers/PrescriptionsController.html":{},"modules/PrescriptionsModule.html":{},"injectables/PrescriptionsService.html":{},"interfaces/Request.html":{},"classes/SerializeInterceptor.html":{},"classes/UpdatePrescriptionDto.html":{},"entities/User.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["retrieve",{"_index":402,"title":{},"body":{"controllers/PrescriptionsController.html":{}}}],["return",{"_index":30,"title":{},"body":{"guards/AdminGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/ClassConstructor.html":{},"injectables/CurrentUserInterceptor.html":{},"controllers/PrescriptionsController.html":{},"injectables/PrescriptionsService.html":{},"classes/SerializeInterceptor.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":21,"title":{},"body":{"guards/AdminGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/CurrentUserInterceptor.html":{},"injectables/CurrentUserMiddleware.html":{},"controllers/PrescriptionsController.html":{},"injectables/PrescriptionsService.html":{},"classes/SerializeInterceptor.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["rohn",{"_index":460,"title":{},"body":{"injectables/PrescriptionsService.html":{}}}],["run",{"_index":632,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":197,"title":{},"body":{"interfaces/ClassConstructor.html":{},"classes/SerializeInterceptor.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":199,"title":{},"body":{"interfaces/ClassConstructor.html":{},"classes/SerializeInterceptor.html":{}}}],["salt",{"_index":171,"title":{},"body":{"injectables/AuthService.html":{}}}],["save",{"_index":182,"title":{},"body":{"injectables/AuthService.html":{}}}],["scalable",{"_index":616,"title":{},"body":{"index.html":{}}}],["scrypt",{"_index":155,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["scrypt(password",{"_index":174,"title":{},"body":{"injectables/AuthService.html":{}}}],["see",{"_index":161,"title":{},"body":{"injectables/AuthService.html":{}}}],["serialize",{"_index":383,"title":{},"body":{"controllers/PrescriptionsController.html":{},"controllers/UsersController.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["serialize(dto",{"_index":204,"title":{},"body":{"interfaces/ClassConstructor.html":{},"classes/SerializeInterceptor.html":{},"miscellaneous/functions.html":{}}}],["serialize(prescriptiondto",{"_index":393,"title":{},"body":{"controllers/PrescriptionsController.html":{}}}],["serialize(userdto",{"_index":528,"title":{},"body":{"controllers/UsersController.html":{}}}],["serializeinterceptor",{"_index":207,"title":{"classes/SerializeInterceptor.html":{}},"body":{"interfaces/ClassConstructor.html":{},"classes/SerializeInterceptor.html":{},"coverage.html":{}}}],["serializeinterceptor(dto",{"_index":206,"title":{},"body":{"interfaces/ClassConstructor.html":{},"classes/SerializeInterceptor.html":{}}}],["server",{"_index":344,"title":{},"body":{"entities/Prescription.html":{},"index.html":{}}}],["service",{"_index":451,"title":{},"body":{"injectables/PrescriptionsService.html":{}}}],["session",{"_index":98,"title":{},"body":{"modules/AppModule.html":{},"controllers/UsersController.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["session.userid",{"_index":532,"title":{},"body":{"controllers/UsersController.html":{}}}],["side",{"_index":617,"title":{},"body":{"index.html":{}}}],["signin",{"_index":138,"title":{},"body":{"injectables/AuthService.html":{},"controllers/UsersController.html":{}}}],["signin(@body",{"_index":538,"title":{},"body":{"controllers/UsersController.html":{}}}],["signin(body",{"_index":514,"title":{},"body":{"controllers/UsersController.html":{}}}],["signin(email",{"_index":144,"title":{},"body":{"injectables/AuthService.html":{}}}],["signout",{"_index":506,"title":{},"body":{"controllers/UsersController.html":{}}}],["signout(@session",{"_index":531,"title":{},"body":{"controllers/UsersController.html":{}}}],["signout(session",{"_index":517,"title":{},"body":{"controllers/UsersController.html":{}}}],["signup",{"_index":139,"title":{},"body":{"injectables/AuthService.html":{}}}],["signup(email",{"_index":149,"title":{},"body":{"injectables/AuthService.html":{}}}],["source",{"_index":4,"title":{},"body":{"guards/AdminGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/ClassConstructor.html":{},"classes/CreatePrescriptionDto.html":{},"classes/CreateUserDto.html":{},"injectables/CurrentUserInterceptor.html":{},"injectables/CurrentUserMiddleware.html":{},"classes/GetPrescriptionDto.html":{},"classes/MedicationDto.html":{},"classes/MedicationDto-1.html":{},"classes/MedicationDto-2.html":{},"classes/PatientDto.html":{},"classes/PatientDto-1.html":{},"entities/Prescription.html":{},"classes/PrescriptionDto.html":{},"controllers/PrescriptionsController.html":{},"modules/PrescriptionsModule.html":{},"injectables/PrescriptionsService.html":{},"interfaces/Request.html":{},"classes/SerializeInterceptor.html":{},"classes/UpdatePrescriptionDto.html":{},"entities/User.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["sponsors",{"_index":651,"title":{},"body":{"index.html":{}}}],["src/.../app.module.ts",{"_index":680,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../auth.service.ts",{"_index":682,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../current",{"_index":681,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":607,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../serialize.interceptor.ts",{"_index":608,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app.controller.ts",{"_index":38,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":41,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":65,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app.module.ts:48",{"_index":70,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":127,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":128,"title":{},"body":{"injectables/AppService.html":{}}}],["src/guards/admin.guard.ts",{"_index":6,"title":{},"body":{"guards/AdminGuard.html":{},"coverage.html":{}}}],["src/guards/admin.guard.ts:4",{"_index":14,"title":{},"body":{"guards/AdminGuard.html":{}}}],["src/guards/auth.guard.ts",{"_index":132,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["src/guards/auth.guard.ts:4",{"_index":133,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/interceptors/serialize.interceptor.ts",{"_index":192,"title":{},"body":{"interfaces/ClassConstructor.html":{},"classes/SerializeInterceptor.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/interceptors/serialize.interceptor.ts:19",{"_index":488,"title":{},"body":{"classes/SerializeInterceptor.html":{}}}],["src/interceptors/serialize.interceptor.ts:22",{"_index":489,"title":{},"body":{"classes/SerializeInterceptor.html":{}}}],["src/main.ts",{"_index":573,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/prescriptions/dtos/create",{"_index":218,"title":{},"body":{"classes/CreatePrescriptionDto.html":{},"classes/MedicationDto.html":{},"classes/PatientDto.html":{},"coverage.html":{}}}],["src/prescriptions/dtos/get",{"_index":276,"title":{},"body":{"classes/GetPrescriptionDto.html":{},"coverage.html":{}}}],["src/prescriptions/dtos/prescription.dto.ts",{"_index":281,"title":{},"body":{"classes/MedicationDto-1.html":{},"classes/PatientDto-1.html":{},"classes/PrescriptionDto.html":{},"coverage.html":{}}}],["src/prescriptions/dtos/prescription.dto.ts:11",{"_index":283,"title":{},"body":{"classes/MedicationDto-1.html":{}}}],["src/prescriptions/dtos/prescription.dto.ts:17",{"_index":300,"title":{},"body":{"classes/PatientDto-1.html":{}}}],["src/prescriptions/dtos/prescription.dto.ts:21",{"_index":299,"title":{},"body":{"classes/PatientDto-1.html":{}}}],["src/prescriptions/dtos/prescription.dto.ts:28",{"_index":350,"title":{},"body":{"classes/PrescriptionDto.html":{}}}],["src/prescriptions/dtos/prescription.dto.ts:33",{"_index":355,"title":{},"body":{"classes/PrescriptionDto.html":{}}}],["src/prescriptions/dtos/prescription.dto.ts:38",{"_index":349,"title":{},"body":{"classes/PrescriptionDto.html":{}}}],["src/prescriptions/dtos/prescription.dto.ts:44",{"_index":353,"title":{},"body":{"classes/PrescriptionDto.html":{}}}],["src/prescriptions/dtos/prescription.dto.ts:7",{"_index":284,"title":{},"body":{"classes/MedicationDto-1.html":{}}}],["src/prescriptions/dtos/update",{"_index":292,"title":{},"body":{"classes/MedicationDto-2.html":{},"classes/UpdatePrescriptionDto.html":{},"coverage.html":{}}}],["src/prescriptions/prescription.entity.ts",{"_index":302,"title":{},"body":{"entities/Prescription.html":{},"coverage.html":{}}}],["src/prescriptions/prescription.entity.ts:16",{"_index":307,"title":{},"body":{"entities/Prescription.html":{}}}],["src/prescriptions/prescription.entity.ts:19",{"_index":311,"title":{},"body":{"entities/Prescription.html":{}}}],["src/prescriptions/prescription.entity.ts:22",{"_index":318,"title":{},"body":{"entities/Prescription.html":{}}}],["src/prescriptions/prescription.entity.ts:25",{"_index":317,"title":{},"body":{"entities/Prescription.html":{}}}],["src/prescriptions/prescription.entity.ts:28",{"_index":309,"title":{},"body":{"entities/Prescription.html":{}}}],["src/prescriptions/prescription.entity.ts:31",{"_index":316,"title":{},"body":{"entities/Prescription.html":{}}}],["src/prescriptions/prescriptions.controller.ts",{"_index":357,"title":{},"body":{"controllers/PrescriptionsController.html":{},"coverage.html":{}}}],["src/prescriptions/prescriptions.controller.ts:33",{"_index":367,"title":{},"body":{"controllers/PrescriptionsController.html":{}}}],["src/prescriptions/prescriptions.controller.ts:46",{"_index":364,"title":{},"body":{"controllers/PrescriptionsController.html":{}}}],["src/prescriptions/prescriptions.controller.ts:51",{"_index":370,"title":{},"body":{"controllers/PrescriptionsController.html":{}}}],["src/prescriptions/prescriptions.module.ts",{"_index":410,"title":{},"body":{"modules/PrescriptionsModule.html":{}}}],["src/prescriptions/prescriptions.service.ts",{"_index":413,"title":{},"body":{"injectables/PrescriptionsService.html":{},"coverage.html":{}}}],["src/prescriptions/prescriptions.service.ts:10",{"_index":419,"title":{},"body":{"injectables/PrescriptionsService.html":{}}}],["src/prescriptions/prescriptions.service.ts:15",{"_index":427,"title":{},"body":{"injectables/PrescriptionsService.html":{}}}],["src/prescriptions/prescriptions.service.ts:19",{"_index":422,"title":{},"body":{"injectables/PrescriptionsService.html":{}}}],["src/prescriptions/prescriptions.service.ts:24",{"_index":433,"title":{},"body":{"injectables/PrescriptionsService.html":{}}}],["src/prescriptions/prescriptions.service.ts:37",{"_index":424,"title":{},"body":{"injectables/PrescriptionsService.html":{}}}],["src/prescriptions/prescriptions.service.ts:76",{"_index":430,"title":{},"body":{"injectables/PrescriptionsService.html":{}}}],["src/users/auth.service.ts",{"_index":136,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/users/auth.service.ts:13",{"_index":143,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/users/auth.service.ts:16",{"_index":150,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/users/auth.service.ts:40",{"_index":146,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/users/decorators/current",{"_index":577,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/users/dtos/create",{"_index":241,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/users/dtos/user.dto.ts",{"_index":498,"title":{},"body":{"classes/UserDto.html":{},"coverage.html":{}}}],["src/users/dtos/user.dto.ts:5",{"_index":500,"title":{},"body":{"classes/UserDto.html":{}}}],["src/users/dtos/user.dto.ts:8",{"_index":499,"title":{},"body":{"classes/UserDto.html":{}}}],["src/users/interceptors/current",{"_index":247,"title":{},"body":{"injectables/CurrentUserInterceptor.html":{},"coverage.html":{}}}],["src/users/middlewares/current",{"_index":257,"title":{},"body":{"injectables/CurrentUserMiddleware.html":{},"interfaces/Request.html":{},"coverage.html":{}}}],["src/users/user.entity.ts",{"_index":492,"title":{},"body":{"entities/User.html":{},"coverage.html":{}}}],["src/users/user.entity.ts:10",{"_index":495,"title":{},"body":{"entities/User.html":{}}}],["src/users/user.entity.ts:13",{"_index":493,"title":{},"body":{"entities/User.html":{}}}],["src/users/user.entity.ts:16",{"_index":496,"title":{},"body":{"entities/User.html":{}}}],["src/users/users.controller.ts",{"_index":502,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/users/users.controller.ts:30",{"_index":522,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:35",{"_index":519,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:40",{"_index":510,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:47",{"_index":516,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:54",{"_index":513,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.module.ts",{"_index":544,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/users/users.module.ts:15",{"_index":545,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/users/users.service.ts",{"_index":551,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/users/users.service.ts:10",{"_index":556,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:16",{"_index":560,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:23",{"_index":558,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:7",{"_index":554,"title":{},"body":{"injectables/UsersService.html":{}}}],["start",{"_index":633,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":636,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":638,"title":{},"body":{"index.html":{}}}],["started",{"_index":610,"title":{"index.html":{}},"body":{}}],["statements",{"_index":567,"title":{},"body":{"coverage.html":{}}}],["stay",{"_index":659,"title":{},"body":{"index.html":{}}}],["storedhash",{"_index":186,"title":{},"body":{"injectables/AuthService.html":{}}}],["string",{"_index":42,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"classes/CreatePrescriptionDto.html":{},"classes/CreateUserDto.html":{},"classes/GetPrescriptionDto.html":{},"classes/MedicationDto.html":{},"classes/MedicationDto-1.html":{},"classes/MedicationDto-2.html":{},"classes/PatientDto.html":{},"classes/PatientDto-1.html":{},"entities/Prescription.html":{},"classes/PrescriptionDto.html":{},"controllers/PrescriptionsController.html":{},"injectables/PrescriptionsService.html":{},"classes/UpdatePrescriptionDto.html":{},"entities/User.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["support",{"_index":652,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":670,"title":{},"body":{"modules.html":{}}}],["sync",{"_index":339,"title":{},"body":{"entities/Prescription.html":{}}}],["synchronize",{"_index":115,"title":{},"body":{"modules/AppModule.html":{}}}],["syncprescriptionstolocaldb",{"_index":416,"title":{},"body":{"injectables/PrescriptionsService.html":{}}}],["syncprescriptionstolocaldb(prescriptions",{"_index":428,"title":{},"body":{"injectables/PrescriptionsService.html":{}}}],["table",{"_index":581,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":580,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":641,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":644,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":643,"title":{},"body":{"index.html":{}}}],["tests",{"_index":640,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":650,"title":{},"body":{"index.html":{}}}],["this.appservice.gethello",{"_index":47,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.signin(body.email",{"_index":539,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.authservice.signup(body.email",{"_index":535,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.externalapiservice.fetchprescriptions(nhi",{"_index":452,"title":{},"body":{"injectables/PrescriptionsService.html":{}}}],["this.id",{"_index":332,"title":{},"body":{"entities/Prescription.html":{}}}],["this.prescriptionservice.create(body",{"_index":405,"title":{},"body":{"controllers/PrescriptionsController.html":{}}}],["this.prescriptionservice.fetchprescriptionsfromexternalapi(nhi",{"_index":398,"title":{},"body":{"controllers/PrescriptionsController.html":{}}}],["this.prescriptionservice.findbypatientnhi",{"_index":403,"title":{},"body":{"controllers/PrescriptionsController.html":{}}}],["this.prescriptionservice.syncprescriptionstolocaldb(apidata",{"_index":401,"title":{},"body":{"controllers/PrescriptionsController.html":{}}}],["this.prescriptionservice.update(id",{"_index":407,"title":{},"body":{"controllers/PrescriptionsController.html":{}}}],["this.repo.create",{"_index":562,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.repo.create(prescriptiondto",{"_index":442,"title":{},"body":{"injectables/PrescriptionsService.html":{}}}],["this.repo.find",{"_index":439,"title":{},"body":{"injectables/PrescriptionsService.html":{},"injectables/UsersService.html":{}}}],["this.repo.findoneby",{"_index":444,"title":{},"body":{"injectables/PrescriptionsService.html":{},"injectables/UsersService.html":{}}}],["this.repo.save(existingprescription",{"_index":483,"title":{},"body":{"injectables/PrescriptionsService.html":{}}}],["this.repo.save(presciption",{"_index":443,"title":{},"body":{"injectables/PrescriptionsService.html":{}}}],["this.repo.save(prescription",{"_index":486,"title":{},"body":{"injectables/PrescriptionsService.html":{}}}],["this.repo.save(updatedprescription",{"_index":448,"title":{},"body":{"injectables/PrescriptionsService.html":{}}}],["this.repo.save(user",{"_index":563,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersservice.create(email",{"_index":183,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.find(email",{"_index":165,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.findone(parseint(id",{"_index":541,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findone(userid",{"_index":254,"title":{},"body":{"injectables/CurrentUserInterceptor.html":{},"injectables/CurrentUserMiddleware.html":{},"interfaces/Request.html":{}}}],["throw",{"_index":167,"title":{},"body":{"injectables/AuthService.html":{},"injectables/PrescriptionsService.html":{},"controllers/UsersController.html":{}}}],["together",{"_index":173,"title":{},"body":{"injectables/AuthService.html":{}}}],["touch",{"_index":660,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":201,"title":{},"body":{"interfaces/ClassConstructor.html":{},"classes/CreatePrescriptionDto.html":{},"classes/MedicationDto.html":{},"classes/MedicationDto-1.html":{},"classes/MedicationDto-2.html":{},"classes/PatientDto.html":{},"classes/PatientDto-1.html":{},"classes/PrescriptionDto.html":{},"classes/SerializeInterceptor.html":{},"classes/UpdatePrescriptionDto.html":{},"classes/UserDto.html":{},"dependencies.html":{}}}],["true",{"_index":101,"title":{},"body":{"modules/AppModule.html":{},"interfaces/ClassConstructor.html":{},"classes/CreatePrescriptionDto.html":{},"classes/MedicationDto.html":{},"classes/MedicationDto-1.html":{},"classes/MedicationDto-2.html":{},"classes/PatientDto.html":{},"classes/PatientDto-1.html":{},"classes/PrescriptionDto.html":{},"classes/SerializeInterceptor.html":{},"classes/UpdatePrescriptionDto.html":{}}}],["true})@arraynotempty()@arrayminsize(1",{"_index":352,"title":{},"body":{"classes/PrescriptionDto.html":{}}}],["true})@type(undefined",{"_index":228,"title":{},"body":{"classes/CreatePrescriptionDto.html":{},"classes/UpdatePrescriptionDto.html":{}}}],["twitter",{"_index":666,"title":{},"body":{"index.html":{}}}],["type",{"_index":18,"title":{},"body":{"guards/AdminGuard.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/CreatePrescriptionDto.html":{},"classes/CreateUserDto.html":{},"injectables/CurrentUserInterceptor.html":{},"injectables/CurrentUserMiddleware.html":{},"classes/GetPrescriptionDto.html":{},"classes/MedicationDto.html":{},"classes/MedicationDto-1.html":{},"classes/MedicationDto-2.html":{},"classes/PatientDto.html":{},"classes/PatientDto-1.html":{},"entities/Prescription.html":{},"classes/PrescriptionDto.html":{},"controllers/PrescriptionsController.html":{},"injectables/PrescriptionsService.html":{},"interfaces/Request.html":{},"classes/SerializeInterceptor.html":{},"classes/UpdatePrescriptionDto.html":{},"entities/User.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["typeorm",{"_index":323,"title":{},"body":{"entities/Prescription.html":{},"controllers/PrescriptionsController.html":{},"injectables/PrescriptionsService.html":{},"entities/User.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["typeormmodule",{"_index":76,"title":{},"body":{"modules/AppModule.html":{},"modules/PrescriptionsModule.html":{},"modules/UsersModule.html":{}}}],["typeormmodule.forfeature([prescription",{"_index":412,"title":{},"body":{"modules/PrescriptionsModule.html":{}}}],["typeormmodule.forfeature([user",{"_index":549,"title":{},"body":{"modules/UsersModule.html":{}}}],["typeormmodule.forrootasync",{"_index":104,"title":{},"body":{"modules/AppModule.html":{}}}],["types",{"_index":586,"title":{},"body":{"dependencies.html":{}}}],["types/cookie",{"_index":589,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":92,"title":{},"body":{"modules/AppModule.html":{},"injectables/CurrentUserMiddleware.html":{},"interfaces/Request.html":{},"index.html":{}}}],["undefined",{"_index":315,"title":{},"body":{"entities/Prescription.html":{}}}],["unique",{"_index":457,"title":{},"body":{"injectables/PrescriptionsService.html":{}}}],["unit",{"_index":639,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":148,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CurrentUserInterceptor.html":{},"controllers/PrescriptionsController.html":{},"controllers/UsersController.html":{}}}],["unlicensed",{"_index":678,"title":{},"body":{"properties.html":{}}}],["update",{"_index":347,"title":{},"body":{"entities/Prescription.html":{},"controllers/PrescriptionsController.html":{},"injectables/PrescriptionsService.html":{}}}],["update(id",{"_index":431,"title":{},"body":{"injectables/PrescriptionsService.html":{}}}],["updated",{"_index":400,"title":{},"body":{"controllers/PrescriptionsController.html":{}}}],["updatedprescription",{"_index":446,"title":{},"body":{"injectables/PrescriptionsService.html":{}}}],["updateprescription",{"_index":362,"title":{},"body":{"controllers/PrescriptionsController.html":{}}}],["updateprescription(id",{"_index":368,"title":{},"body":{"controllers/PrescriptionsController.html":{}}}],["updateprescriptiondto",{"_index":296,"title":{"classes/UpdatePrescriptionDto.html":{}},"body":{"classes/MedicationDto-2.html":{},"controllers/PrescriptionsController.html":{},"injectables/PrescriptionsService.html":{},"classes/UpdatePrescriptionDto.html":{},"coverage.html":{}}}],["updatetoexternalserver",{"_index":345,"title":{},"body":{"entities/Prescription.html":{}}}],["use",{"_index":162,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CurrentUserMiddleware.html":{}}}],["use(req",{"_index":260,"title":{},"body":{"injectables/CurrentUserMiddleware.html":{},"interfaces/Request.html":{}}}],["usefactory",{"_index":106,"title":{},"body":{"modules/AppModule.html":{}}}],["useguards",{"_index":371,"title":{},"body":{"controllers/PrescriptionsController.html":{},"controllers/UsersController.html":{}}}],["useguards(authguard",{"_index":392,"title":{},"body":{"controllers/PrescriptionsController.html":{},"controllers/UsersController.html":{}}}],["useinterceptors",{"_index":193,"title":{},"body":{"interfaces/ClassConstructor.html":{},"classes/SerializeInterceptor.html":{}}}],["useinterceptors(new",{"_index":205,"title":{},"body":{"interfaces/ClassConstructor.html":{},"classes/SerializeInterceptor.html":{}}}],["user",{"_index":84,"title":{"entities/User.html":{}},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/CurrentUserInterceptor.html":{},"injectables/CurrentUserMiddleware.html":{},"controllers/PrescriptionsController.html":{},"interfaces/Request.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["user.decorator",{"_index":380,"title":{},"body":{"controllers/PrescriptionsController.html":{},"controllers/UsersController.html":{}}}],["user.decorator.ts",{"_index":578,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["user.dto",{"_index":523,"title":{},"body":{"controllers/UsersController.html":{}}}],["user.dto.ts",{"_index":242,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:5",{"_index":244,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:8",{"_index":245,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.entity",{"_index":268,"title":{},"body":{"injectables/CurrentUserMiddleware.html":{},"interfaces/Request.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["user.id",{"_index":537,"title":{},"body":{"controllers/UsersController.html":{}}}],["user.interceptor.ts",{"_index":248,"title":{},"body":{"injectables/CurrentUserInterceptor.html":{},"coverage.html":{}}}],["user.interceptor.ts:10",{"_index":250,"title":{},"body":{"injectables/CurrentUserInterceptor.html":{}}}],["user.interceptor.ts:13",{"_index":251,"title":{},"body":{"injectables/CurrentUserInterceptor.html":{}}}],["user.middleware",{"_index":548,"title":{},"body":{"modules/UsersModule.html":{}}}],["user.middleware.ts",{"_index":258,"title":{},"body":{"injectables/CurrentUserMiddleware.html":{},"interfaces/Request.html":{},"coverage.html":{}}}],["user.middleware.ts:16",{"_index":259,"title":{},"body":{"injectables/CurrentUserMiddleware.html":{}}}],["user.middleware.ts:19",{"_index":264,"title":{},"body":{"injectables/CurrentUserMiddleware.html":{}}}],["user.password.split",{"_index":187,"title":{},"body":{"injectables/AuthService.html":{}}}],["userdto",{"_index":497,"title":{"classes/UserDto.html":{}},"body":{"classes/UserDto.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["userid",{"_index":252,"title":{},"body":{"injectables/CurrentUserInterceptor.html":{},"injectables/CurrentUserMiddleware.html":{},"interfaces/Request.html":{}}}],["users",{"_index":163,"title":{},"body":{"injectables/AuthService.html":{}}}],["users.controller",{"_index":546,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.length",{"_index":166,"title":{},"body":{"injectables/AuthService.html":{}}}],["users.service",{"_index":153,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CurrentUserInterceptor.html":{},"injectables/CurrentUserMiddleware.html":{},"interfaces/Request.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["users/decorators/current",{"_index":379,"title":{},"body":{"controllers/PrescriptionsController.html":{}}}],["users/user.entity",{"_index":85,"title":{},"body":{"modules/AppModule.html":{},"controllers/PrescriptionsController.html":{}}}],["users/users.module",{"_index":82,"title":{},"body":{"modules/AppModule.html":{}}}],["userscontroller",{"_index":501,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["usersmodule",{"_index":61,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersservice",{"_index":142,"title":{"injectables/UsersService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/CurrentUserInterceptor.html":{},"injectables/CurrentUserMiddleware.html":{},"interfaces/Request.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["usevalue",{"_index":118,"title":{},"body":{"modules/AppModule.html":{}}}],["util",{"_index":159,"title":{},"body":{"injectables/AuthService.html":{}}}],["uuid",{"_index":326,"title":{},"body":{"entities/Prescription.html":{},"injectables/PrescriptionsService.html":{},"dependencies.html":{}}}],["uuidv4",{"_index":325,"title":{},"body":{"entities/Prescription.html":{}}}],["v4",{"_index":324,"title":{},"body":{"entities/Prescription.html":{}}}],["validatenested",{"_index":233,"title":{},"body":{"classes/CreatePrescriptionDto.html":{},"classes/MedicationDto.html":{},"classes/MedicationDto-1.html":{},"classes/MedicationDto-2.html":{},"classes/PatientDto.html":{},"classes/PatientDto-1.html":{},"classes/PrescriptionDto.html":{},"classes/UpdatePrescriptionDto.html":{}}}],["validatenested()@type(undefined",{"_index":231,"title":{},"body":{"classes/CreatePrescriptionDto.html":{}}}],["validationpipe",{"_index":73,"title":{},"body":{"modules/AppModule.html":{}}}],["validator",{"_index":235,"title":{},"body":{"classes/CreatePrescriptionDto.html":{},"classes/CreateUserDto.html":{},"classes/GetPrescriptionDto.html":{},"classes/MedicationDto.html":{},"classes/MedicationDto-1.html":{},"classes/MedicationDto-2.html":{},"classes/PatientDto.html":{},"classes/PatientDto-1.html":{},"classes/PrescriptionDto.html":{},"classes/UpdatePrescriptionDto.html":{},"dependencies.html":{}}}],["value",{"_index":683,"title":{},"body":{"miscellaneous/variables.html":{}}}],["var",{"_index":94,"title":{},"body":{"modules/AppModule.html":{}}}],["variable",{"_index":570,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":679,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":676,"title":{},"body":{"properties.html":{}}}],["void",{"_index":72,"title":{},"body":{"modules/AppModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["watch",{"_index":634,"title":{},"body":{"index.html":{}}}],["website",{"_index":664,"title":{},"body":{"index.html":{}}}],["whitelist",{"_index":120,"title":{},"body":{"modules/AppModule.html":{}}}],["whoami",{"_index":507,"title":{},"body":{"controllers/UsersController.html":{}}}],["whoami(@currentuser",{"_index":530,"title":{},"body":{"controllers/UsersController.html":{}}}],["whoami(user",{"_index":520,"title":{},"body":{"controllers/UsersController.html":{}}}],["world",{"_index":130,"title":{},"body":{"injectables/AppService.html":{}}}],["you'd",{"_index":655,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":62,"title":{},"body":{"modules/AppModule.html":{},"modules/PrescriptionsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"guards/AdminGuard.html":{"url":"guards/AdminGuard.html","title":"guard - AdminGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AdminGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/guards/admin.guard.ts\n            \n\n\n\n\n                \n                Implements\n                \n                \n                            CanActivate\n                \n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/guards/admin.guard.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { CanActivate, ExecutionContext } from '@nestjs/common';\n\nexport class AdminGuard implements CanActivate {\n  canActivate(context: ExecutionContext) {\n    const request = context.switchToHttp().getRequest();\n    if (!request.currentUser) {\n      return false;\n    }\n\n    return request.currentUser.admin;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                    \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nPrescriptionsModule\n\nPrescriptionsModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nPrescriptionsModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrescriptionsModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        configure\n                        \n                    \n                \n            \n            \n                \nconfigure(consumer: MiddlewareConsumer)\n                \n            \n\n\n            \n                \n                    Defined in src/app.module.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    consumer\n                                    \n                                            MiddlewareConsumer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { Module, ValidationPipe, MiddlewareConsumer } from '@nestjs/common';\nimport { APP_PIPE } from '@nestjs/core';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { UsersModule } from './users/users.module';\nimport { PrescriptionsModule } from './prescriptions/prescriptions.module';\nimport { User } from './users/user.entity';\nimport { Prescription } from './prescriptions/prescription.entity';\n// eslint-disable-next-line @typescript-eslint/no-var-requires\nconst cookieSession = require('cookie-session');\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      isGlobal: true,\n      envFilePath: `.env.${process.env.NODE_ENV}`,\n    }),\n    TypeOrmModule.forRootAsync({\n      inject: [ConfigService],\n      useFactory: (config: ConfigService) => {\n        return {\n          type: 'mongodb',\n          host: 'localhost',\n          port: 27017,\n          database: config.get('DB_NAME'),\n          synchronize: true,\n          entities: [User, Prescription],\n        };\n      },\n    }),\n    UsersModule,\n    PrescriptionsModule,\n  ],\n  controllers: [AppController],\n  providers: [\n    AppService,\n    {\n      provide: APP_PIPE,\n      useValue: new ValidationPipe({\n        whitelist: true,\n      }),\n    },\n  ],\n})\nexport class AppModule {\n  configure(consumer: MiddlewareConsumer) {\n    consumer\n      .apply(\n        cookieSession({\n          keys: ['fhirsalt'],\n        }),\n      )\n      .forRoutes('*');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/guards/auth.guard.ts\n            \n\n\n\n\n                \n                Implements\n                \n                \n                            CanActivate\n                \n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/guards/auth.guard.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { CanActivate, ExecutionContext } from '@nestjs/common';\n\nexport class AuthGuard implements CanActivate {\n  canActivate(context: ExecutionContext) {\n    const request = context.switchToHttp().getRequest();\n\n    return request.session.userId;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                signin\n                            \n                            \n                                    Async\n                                signup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/users/auth.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        signin\n                        \n                    \n                \n            \n            \n                \n                    \n                    signin(email: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/auth.service.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        signup\n                        \n                    \n                \n            \n            \n                \n                    \n                    signup(email: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/auth.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  Injectable,\n  BadRequestException,\n  NotFoundException,\n} from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport { randomBytes, scrypt as _scrypt } from 'crypto';\nimport { promisify } from 'util';\n\nconst scrypt = promisify(_scrypt);\n\n@Injectable()\nexport class AuthService {\n  constructor(private usersService: UsersService) {}\n\n  async signup(email: string, password: string) {\n    // See if email is in use\n    const users = await this.usersService.find(email);\n    if (users.length) {\n      throw new BadRequestException('email in use');\n    }\n\n    // Hash the users password\n    // Generate a salt\n    const salt = randomBytes(8).toString('hex');\n\n    // Hash the salt and the password together\n    const hash = (await scrypt(password, salt, 32)) as Buffer;\n\n    // Join the hashed result and the salt together\n    const result = salt + '.' + hash.toString('hex');\n\n    // Create a new user and save it\n    const user = await this.usersService.create(email, result);\n\n    // return the user\n    return user;\n  }\n\n  async signin(email: string, password: string) {\n    const [user] = await this.usersService.find(email);\n    if (!user) {\n      throw new NotFoundException('user not found');\n    }\n\n    const [salt, storedHash] = user.password.split('.');\n\n    const hash = (await scrypt(password, salt, 32)) as Buffer;\n\n    if (storedHash !== hash.toString('hex')) {\n      throw new BadRequestException('bad password');\n    }\n\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ClassConstructor.html":{"url":"interfaces/ClassConstructor.html","title":"interface - ClassConstructor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ClassConstructor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interceptors/serialize.interceptor.ts\n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  UseInterceptors,\n  NestInterceptor,\n  ExecutionContext,\n  CallHandler,\n} from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { plainToClass } from 'class-transformer';\n\ninterface ClassConstructor {\n  new (...args: any[]): {};\n}\n\nexport function Serialize(dto: ClassConstructor) {\n  return UseInterceptors(new SerializeInterceptor(dto));\n}\n\nexport class SerializeInterceptor implements NestInterceptor {\n  constructor(private dto: any) {}\n\n  intercept(context: ExecutionContext, handler: CallHandler): Observable {\n    return handler.handle().pipe(\n      map((data: any) => {\n        return plainToClass(this.dto, data, {\n          excludeExtraneousValues: true,\n        });\n      }),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePrescriptionDto.html":{"url":"classes/CreatePrescriptionDto.html","title":"class - CreatePrescriptionDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePrescriptionDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/prescriptions/dtos/create-prescription.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                date\n                            \n                            \n                                    \n                                    \n                                    \n                                medications\n                            \n                            \n                                    \n                                    \n                                patient\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        date\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/prescriptions/dtos/create-prescription.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        medications\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MedicationDto[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsArray()@ValidateNested({each: true})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/prescriptions/dtos/create-prescription.dto.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        patient\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PatientDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateNested()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/prescriptions/dtos/create-prescription.dto.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString, ValidateNested, IsArray } from 'class-validator';\nimport { Type } from 'class-transformer';\n\nexport class PatientDto {\n  @IsString()\n  nhi: string;\n\n  @IsString()\n  name: string;\n}\n\nexport class MedicationDto {\n  @IsString()\n  id: string;\n\n  @IsString()\n  dose: string;\n}\n\nexport class CreatePrescriptionDto {\n  @ValidateNested()\n  @Type(() => PatientDto)\n  patient: PatientDto;\n\n  @IsString()\n  date: string;\n\n  @IsArray()\n  @ValidateNested({ each: true })\n  @Type(() => MedicationDto)\n  medications: MedicationDto[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dtos/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/create-user.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/create-user.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsString } from 'class-validator';\n\nexport class CreateUserDto {\n  @IsEmail()\n  email: string;\n\n  @IsString()\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CurrentUserInterceptor.html":{"url":"injectables/CurrentUserInterceptor.html","title":"injectable - CurrentUserInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CurrentUserInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/interceptors/current-user.interceptor.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/users/interceptors/current-user.interceptor.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        intercept\n                        \n                    \n                \n            \n            \n                \n                    \n                    intercept(context: ExecutionContext, handler: CallHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/users/interceptors/current-user.interceptor.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    handler\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  NestInterceptor,\n  ExecutionContext,\n  CallHandler,\n  Injectable,\n} from '@nestjs/common';\nimport { UsersService } from '../users.service';\n\n@Injectable()\nexport class CurrentUserInterceptor implements NestInterceptor {\n  constructor(private usersService: UsersService) {}\n\n  async intercept(context: ExecutionContext, handler: CallHandler) {\n    const request = context.switchToHttp().getRequest();\n    const { userId } = request.session || {};\n\n    if (userId) {\n      const user = await this.usersService.findOne(userId);\n      request.currentUser = user;\n    }\n\n    return handler.handle();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CurrentUserMiddleware.html":{"url":"injectables/CurrentUserMiddleware.html","title":"injectable - CurrentUserMiddleware","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CurrentUserMiddleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/middlewares/current-user.middleware.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/users/middlewares/current-user.middleware.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        use\n                        \n                    \n                \n            \n            \n                \n                    \n                    use(req: Request, res: Response, next: NextFunction)\n                \n            \n\n\n            \n                \n                    Defined in src/users/middlewares/current-user.middleware.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            NextFunction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NestMiddleware } from '@nestjs/common';\nimport { Request, Response, NextFunction } from 'express';\nimport { UsersService } from '../users.service';\nimport { User } from '../user.entity';\n\ndeclare global {\n  // eslint-disable-next-line @typescript-eslint/no-namespace\n  namespace Express {\n    interface Request {\n      currentUser?: User;\n    }\n  }\n}\n\n@Injectable()\nexport class CurrentUserMiddleware implements NestMiddleware {\n  constructor(private usersService: UsersService) {}\n\n  async use(req: Request, res: Response, next: NextFunction) {\n    const { userId } = req.session || {};\n\n    if (userId) {\n      const user = await this.usersService.findOne(userId);\n      req.currentUser = user;\n    }\n\n    next();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetPrescriptionDto.html":{"url":"classes/GetPrescriptionDto.html","title":"class - GetPrescriptionDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetPrescriptionDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/prescriptions/dtos/get-prescription.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                nhi\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        nhi\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/prescriptions/dtos/get-prescription.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString } from 'class-validator';\n\nexport class GetPrescriptionDto {\n  @IsString()\n  nhi: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MedicationDto.html":{"url":"classes/MedicationDto.html","title":"class - MedicationDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MedicationDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/prescriptions/dtos/create-prescription.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                dose\n                            \n                            \n                                    \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        dose\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/prescriptions/dtos/create-prescription.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/prescriptions/dtos/create-prescription.dto.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString, ValidateNested, IsArray } from 'class-validator';\nimport { Type } from 'class-transformer';\n\nexport class PatientDto {\n  @IsString()\n  nhi: string;\n\n  @IsString()\n  name: string;\n}\n\nexport class MedicationDto {\n  @IsString()\n  id: string;\n\n  @IsString()\n  dose: string;\n}\n\nexport class CreatePrescriptionDto {\n  @ValidateNested()\n  @Type(() => PatientDto)\n  patient: PatientDto;\n\n  @IsString()\n  date: string;\n\n  @IsArray()\n  @ValidateNested({ each: true })\n  @Type(() => MedicationDto)\n  medications: MedicationDto[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MedicationDto-1.html":{"url":"classes/MedicationDto-1.html","title":"class - MedicationDto-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MedicationDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/prescriptions/dtos/prescription.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                dose\n                            \n                            \n                                    \n                                    \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        dose\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/prescriptions/dtos/prescription.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/prescriptions/dtos/prescription.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Expose } from 'class-transformer';\nimport { IsString, IsNotEmpty, ValidateNested, ArrayNotEmpty, ArrayMinSize } from 'class-validator';\n\nexport class MedicationDto {\n  @IsString()\n  @IsNotEmpty()\n  id: string;\n\n  @IsString()\n  @IsNotEmpty()\n  dose: string;\n}\n\nexport class PatientDto {\n  @IsString()\n  @IsNotEmpty()\n  nhi: string;\n\n  @IsString()\n  @IsNotEmpty()\n  name: string;\n}\n\nexport class PrescriptionDto {\n  @Expose()\n  @IsString()\n  @IsNotEmpty()\n  id: string;\n\n  @Expose()\n  @ValidateNested()\n  @IsNotEmpty()\n  patient: PatientDto;\n\n  @Expose()\n  @IsString()\n  @IsNotEmpty()\n  date: string;\n\n  @Expose()\n  @ValidateNested({ each: true })\n  @ArrayNotEmpty()\n  @ArrayMinSize(1)\n  medications: MedicationDto[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MedicationDto-2.html":{"url":"classes/MedicationDto-2.html","title":"class - MedicationDto-2","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MedicationDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/prescriptions/dtos/update-prescriptions.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                dose\n                            \n                            \n                                    \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        dose\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/prescriptions/dtos/update-prescriptions.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/prescriptions/dtos/update-prescriptions.dto.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString, ValidateNested, IsArray } from 'class-validator';\nimport { Type } from 'class-transformer';\n\nexport class UpdatePrescriptionDto {\n  @IsString()\n  date: string;\n\n  @IsArray()\n  @ValidateNested({ each: true })\n  @Type(() => MedicationDto)\n  medications: MedicationDto[];\n}\n\nexport class MedicationDto {\n  @IsString()\n  id: string;\n\n  @IsString()\n  dose: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PatientDto.html":{"url":"classes/PatientDto.html","title":"class - PatientDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PatientDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/prescriptions/dtos/create-prescription.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                nhi\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/prescriptions/dtos/create-prescription.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        nhi\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/prescriptions/dtos/create-prescription.dto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString, ValidateNested, IsArray } from 'class-validator';\nimport { Type } from 'class-transformer';\n\nexport class PatientDto {\n  @IsString()\n  nhi: string;\n\n  @IsString()\n  name: string;\n}\n\nexport class MedicationDto {\n  @IsString()\n  id: string;\n\n  @IsString()\n  dose: string;\n}\n\nexport class CreatePrescriptionDto {\n  @ValidateNested()\n  @Type(() => PatientDto)\n  patient: PatientDto;\n\n  @IsString()\n  date: string;\n\n  @IsArray()\n  @ValidateNested({ each: true })\n  @Type(() => MedicationDto)\n  medications: MedicationDto[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PatientDto-1.html":{"url":"classes/PatientDto-1.html","title":"class - PatientDto-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PatientDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/prescriptions/dtos/prescription.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                nhi\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/prescriptions/dtos/prescription.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        nhi\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/prescriptions/dtos/prescription.dto.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Expose } from 'class-transformer';\nimport { IsString, IsNotEmpty, ValidateNested, ArrayNotEmpty, ArrayMinSize } from 'class-validator';\n\nexport class MedicationDto {\n  @IsString()\n  @IsNotEmpty()\n  id: string;\n\n  @IsString()\n  @IsNotEmpty()\n  dose: string;\n}\n\nexport class PatientDto {\n  @IsString()\n  @IsNotEmpty()\n  nhi: string;\n\n  @IsString()\n  @IsNotEmpty()\n  name: string;\n}\n\nexport class PrescriptionDto {\n  @Expose()\n  @IsString()\n  @IsNotEmpty()\n  id: string;\n\n  @Expose()\n  @ValidateNested()\n  @IsNotEmpty()\n  patient: PatientDto;\n\n  @Expose()\n  @IsString()\n  @IsNotEmpty()\n  date: string;\n\n  @Expose()\n  @ValidateNested({ each: true })\n  @ArrayNotEmpty()\n  @ArrayMinSize(1)\n  medications: MedicationDto[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Prescription.html":{"url":"entities/Prescription.html","title":"entity - Prescription","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Prescription\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/prescriptions/prescription.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                _id\n                            \n                            \n                                    \n                                date\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                medications\n                            \n                            \n                                    \n                                patient\n                            \n                            \n                                    \n                                resourceId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ObjectIdColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/prescriptions/prescription.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        date\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/prescriptions/prescription.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/prescriptions/prescription.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        medications\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('jsonb', {default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/prescriptions/prescription.entity.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        patient\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('jsonb')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/prescriptions/prescription.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        resourceId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/prescriptions/prescription.entity.ts:22\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Entity,\n  Column,\n  ObjectId,\n  ObjectIdColumn,\n  PrimaryGeneratedColumn,\n  BeforeInsert,\n  AfterInsert,\n  AfterUpdate,\n} from 'typeorm';\nimport { v4 as uuidv4 } from 'uuid';\n\n@Entity()\nexport class Prescription {\n  @ObjectIdColumn()\n  _id: ObjectId;\n\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column()\n  resourceId: string;\n\n  @Column('jsonb')\n  patient: { nhi: string; name: string };\n\n  @Column()\n  date: string;\n\n  @Column('jsonb', { default: [] })\n  medications: { id: string; dose: string }[];\n\n  // Assign UUID to the `id` field before insertion\n  @BeforeInsert()\n  generateId() {\n    this.id = uuidv4();\n  }\n\n  @AfterInsert()\n  addToExternalServer() {\n    // We can call POST External API here to sync the data\n    console.log('Now Need to push this record to External server', this);\n  }\n\n  @AfterUpdate()\n  updateToExternalServer() {\n    // We can call PATCH External API here to sync the data\n    console.log('Now Need to update this record to External server', this);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PrescriptionDto.html":{"url":"classes/PrescriptionDto.html","title":"class - PrescriptionDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PrescriptionDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/prescriptions/dtos/prescription.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                date\n                            \n                            \n                                    \n                                    \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                medications\n                            \n                            \n                                    \n                                    \n                                    \n                                patient\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        date\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/prescriptions/dtos/prescription.dto.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/prescriptions/dtos/prescription.dto.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        medications\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MedicationDto[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@ValidateNested({each: true})@ArrayNotEmpty()@ArrayMinSize(1)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/prescriptions/dtos/prescription.dto.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        patient\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PatientDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@ValidateNested()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/prescriptions/dtos/prescription.dto.ts:33\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Expose } from 'class-transformer';\nimport { IsString, IsNotEmpty, ValidateNested, ArrayNotEmpty, ArrayMinSize } from 'class-validator';\n\nexport class MedicationDto {\n  @IsString()\n  @IsNotEmpty()\n  id: string;\n\n  @IsString()\n  @IsNotEmpty()\n  dose: string;\n}\n\nexport class PatientDto {\n  @IsString()\n  @IsNotEmpty()\n  nhi: string;\n\n  @IsString()\n  @IsNotEmpty()\n  name: string;\n}\n\nexport class PrescriptionDto {\n  @Expose()\n  @IsString()\n  @IsNotEmpty()\n  id: string;\n\n  @Expose()\n  @ValidateNested()\n  @IsNotEmpty()\n  patient: PatientDto;\n\n  @Expose()\n  @IsString()\n  @IsNotEmpty()\n  date: string;\n\n  @Expose()\n  @ValidateNested({ each: true })\n  @ArrayNotEmpty()\n  @ArrayMinSize(1)\n  medications: MedicationDto[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PrescriptionsController.html":{"url":"controllers/PrescriptionsController.html","title":"controller - PrescriptionsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PrescriptionsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/prescriptions/prescriptions.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                prescriptions\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createPrescription\n                            \n                            \n                                    \n                                    Async\n                                getPrescriptionsByNhi\n                            \n                            \n                                    \n                                updatePrescription\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        createPrescription\n                        \n                    \n                \n            \n            \n                \n                    \n                    createPrescription(body: CreatePrescriptionDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/prescriptions/prescriptions.controller.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                CreatePrescriptionDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        getPrescriptionsByNhi\n                        \n                    \n                \n            \n            \n                \n                    \n                    getPrescriptionsByNhi(undefined: GetPrescriptionDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/prescriptions/prescriptions.controller.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                GetPrescriptionDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        updatePrescription\n                        \n                    \n                \n            \n            \n                \n                    \n                    updatePrescription(id: string, body: UpdatePrescriptionDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch('/:id')\n                \n            \n\n            \n                \n                    Defined in src/prescriptions/prescriptions.controller.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n                                    \n                                                UpdatePrescriptionDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Post,\n  Body,\n  UseGuards,\n  Patch,\n  Param,\n  Get,\n  Query,\n} from '@nestjs/common';\nimport { CreatePrescriptionDto } from './dtos/create-prescription.dto';\nimport { PrescriptionsService } from './prescriptions.service';\nimport { AuthGuard } from '../guards/auth.guard';\n// import { CurrentUser } from '../users/decorators/current-user.decorator';\n// import { User } from '../users/user.entity';\n// import { Prescription } from './prescription.entity';\n\nimport { PrescriptionDto } from './dtos/prescription.dto';\nimport { Serialize } from '../interceptors/serialize.interceptor';\nimport { UpdatePrescriptionDto } from './dtos/update-prescriptions.dto';\nimport { GetPrescriptionDto } from './dtos/get-prescription.dto';\n// import { ObjectId } from 'typeorm';\n// import { AdminGuard } from '../guards/admin.guard';\n// import { GetEstimateDto } from './dtos/get-estimate.dto';\n\n@Controller('prescriptions')\n@UseGuards(AuthGuard)\n@Serialize(PrescriptionDto)\nexport class PrescriptionsController {\n  constructor(private prescriptionService: PrescriptionsService) {}\n\n  @Get()\n  async getPrescriptionsByNhi(@Query() { nhi }: GetPrescriptionDto) {\n    // Fetch prescriptions from the external API\n    const apiData =\n      await this.prescriptionService.fetchPrescriptionsFromExternalAPI(nhi);\n\n    // Update local database with new or updated prescriptions\n    await this.prescriptionService.syncPrescriptionsToLocalDB(apiData);\n\n    // Retrieve prescriptions from the local database\n    return await this.prescriptionService.findByPatientNhi({ nhi });\n  }\n\n  @Post()\n  createPrescription(@Body() body: CreatePrescriptionDto) {\n    return this.prescriptionService.create(body);\n  }\n\n  @Patch('/:id')\n  updatePrescription(\n    @Param('id') id: string,\n    @Body() body: UpdatePrescriptionDto,\n  ) {\n    return this.prescriptionService.update(id, body);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PrescriptionsModule.html":{"url":"modules/PrescriptionsModule.html","title":"module - PrescriptionsModule","body":"\n                   \n\n\n\n\n    Modules\n    PrescriptionsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PrescriptionsModule\n\n\n\ncluster_PrescriptionsModule_providers\n\n\n\n\nPrescriptionsService\n\nPrescriptionsService\n\n\n\nPrescriptionsModule\n\nPrescriptionsModule\n\nPrescriptionsModule -->\n\nPrescriptionsService->PrescriptionsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/prescriptions/prescriptions.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PrescriptionsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            PrescriptionsController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { PrescriptionsController } from './prescriptions.controller';\nimport { PrescriptionsService } from './prescriptions.service';\nimport { Prescription } from './prescription.entity';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Prescription])],\n  controllers: [PrescriptionsController],\n  providers: [PrescriptionsService],\n})\nexport class PrescriptionsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PrescriptionsService.html":{"url":"injectables/PrescriptionsService.html","title":"injectable - PrescriptionsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PrescriptionsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/prescriptions/prescriptions.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                    Async\n                                fetchPrescriptionsFromExternalAPI\n                            \n                            \n                                    Async\n                                findByPatientNhi\n                            \n                            \n                                    Async\n                                syncPrescriptionsToLocalDB\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repo: MongoRepository)\n                    \n                \n                        \n                            \n                                Defined in src/prescriptions/prescriptions.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repo\n                                                  \n                                                        \n                                                                        MongoRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(prescriptionDto: CreatePrescriptionDto)\n                \n            \n\n\n            \n                \n                    Defined in src/prescriptions/prescriptions.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    prescriptionDto\n                                    \n                                                CreatePrescriptionDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        fetchPrescriptionsFromExternalAPI\n                        \n                    \n                \n            \n            \n                \n                    \n                    fetchPrescriptionsFromExternalAPI(nhi)\n                \n            \n\n\n            \n                \n                    Defined in src/prescriptions/prescriptions.service.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    nhi\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findByPatientNhi\n                        \n                    \n                \n            \n            \n                \n                    \n                    findByPatientNhi(undefined)\n                \n            \n\n\n            \n                \n                    Defined in src/prescriptions/prescriptions.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        syncPrescriptionsToLocalDB\n                        \n                    \n                \n            \n            \n                \n                    \n                    syncPrescriptionsToLocalDB(prescriptions: Partial[])\n                \n            \n\n\n            \n                \n                    Defined in src/prescriptions/prescriptions.service.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    prescriptions\n                                    \n                                                Partial[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, attrs: Partial)\n                \n            \n\n\n            \n                \n                    Defined in src/prescriptions/prescriptions.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    attrs\n                                    \n                                                Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { MongoRepository } from 'typeorm';\nimport { Prescription } from './prescription.entity';\nimport { CreatePrescriptionDto } from './dtos/create-prescription.dto';\nimport { UpdatePrescriptionDto } from './dtos/update-prescriptions.dto';\n// import { ExternalAPIService } from './external-api.service';\n\n@Injectable()\nexport class PrescriptionsService {\n  constructor(\n    @InjectRepository(Prescription) private repo: MongoRepository,\n  ) {}\n\n  async findByPatientNhi({ nhi }): Promise {\n    return this.repo.find({ 'patient.nhi': nhi });\n  }\n\n  create(prescriptionDto: CreatePrescriptionDto) {\n    const presciption = this.repo.create(prescriptionDto);\n    return this.repo.save(presciption);\n  }\n\n  async update(\n    id: string,\n    attrs: Partial,\n  ): Promise {\n    const prescription = await this.repo.findOneBy({ id });\n    if (!prescription) {\n      throw new NotFoundException('prescription not found');\n    }\n\n    const updatedPrescription = Object.assign(prescription, attrs);\n    return this.repo.save(updatedPrescription);\n  }\n\n  async fetchPrescriptionsFromExternalAPI(nhi): Promise[]> {\n    // Fetch prescriptions from the external API\n    // Implementation depends on your external API service\n    // const prescriptions = await this.externalAPIService.fetchPrescriptions(nhi);\n    // return prescriptions;\n\n    // Currently I am going to return fake records\n    return [\n      {\n        resourceId: 'some-unique-uuid-1234',\n        patient: {\n          nhi: 'PT123432',\n          name: 'Patient Rohn',\n        },\n        date: '2023-06-10T09:21:47.976Z',\n        medications: [\n          {\n            id: 'MED001',\n            dose: 'OD',\n          },\n        ],\n      },\n      {\n        resourceId: 'some-unique-uuid-1342',\n        patient: {\n          nhi: 'PT123432',\n          name: 'Patient Jogn',\n        },\n        date: '2023-06-18T09:21:47.976Z',\n        medications: [\n          {\n            id: 'MED401',\n            dose: 'BD',\n          },\n        ],\n      },\n    ];\n  }\n\n  async syncPrescriptionsToLocalDB(\n    prescriptions: Partial[],\n  ): Promise {\n    // Update or insert prescriptions in the local database\n    for (const prescription of prescriptions) {\n      // Find existing prescription by ID\n      const existingPrescription = await this.repo.findOneBy({\n        resourceId: prescription.resourceId,\n      });\n      // If existing prescription is found and date has changed, update it\n      if (existingPrescription) {\n        if (existingPrescription.date !== prescription.date) {\n          existingPrescription.patient = prescription.patient;\n          existingPrescription.date = prescription.date;\n          existingPrescription.medications = prescription.medications;\n\n          await this.repo.save(existingPrescription);\n        }\n      } else {\n        // If prescription does not exist, create a new one\n        await this.repo.save(prescription);\n      }\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Request.html":{"url":"interfaces/Request.html","title":"interface - Request","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Request\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/middlewares/current-user.middleware.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            currentUser\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        currentUser\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        currentUser:         User\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable, NestMiddleware } from '@nestjs/common';\nimport { Request, Response, NextFunction } from 'express';\nimport { UsersService } from '../users.service';\nimport { User } from '../user.entity';\n\ndeclare global {\n  // eslint-disable-next-line @typescript-eslint/no-namespace\n  namespace Express {\n    interface Request {\n      currentUser?: User;\n    }\n  }\n}\n\n@Injectable()\nexport class CurrentUserMiddleware implements NestMiddleware {\n  constructor(private usersService: UsersService) {}\n\n  async use(req: Request, res: Response, next: NextFunction) {\n    const { userId } = req.session || {};\n\n    if (userId) {\n      const user = await this.usersService.findOne(userId);\n      req.currentUser = user;\n    }\n\n    next();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SerializeInterceptor.html":{"url":"classes/SerializeInterceptor.html","title":"class - SerializeInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SerializeInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interceptors/serialize.interceptor.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        NestInterceptor\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(dto: any)\n                    \n                \n                        \n                            \n                                Defined in src/interceptors/serialize.interceptor.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dto\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, handler: CallHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/interceptors/serialize.interceptor.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    handler\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  UseInterceptors,\n  NestInterceptor,\n  ExecutionContext,\n  CallHandler,\n} from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { plainToClass } from 'class-transformer';\n\ninterface ClassConstructor {\n  new (...args: any[]): {};\n}\n\nexport function Serialize(dto: ClassConstructor) {\n  return UseInterceptors(new SerializeInterceptor(dto));\n}\n\nexport class SerializeInterceptor implements NestInterceptor {\n  constructor(private dto: any) {}\n\n  intercept(context: ExecutionContext, handler: CallHandler): Observable {\n    return handler.handle().pipe(\n      map((data: any) => {\n        return plainToClass(this.dto, data, {\n          excludeExtraneousValues: true,\n        });\n      }),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdatePrescriptionDto.html":{"url":"classes/UpdatePrescriptionDto.html","title":"class - UpdatePrescriptionDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdatePrescriptionDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/prescriptions/dtos/update-prescriptions.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                date\n                            \n                            \n                                    \n                                    \n                                    \n                                medications\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        date\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/prescriptions/dtos/update-prescriptions.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        medications\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MedicationDto[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsArray()@ValidateNested({each: true})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/prescriptions/dtos/update-prescriptions.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString, ValidateNested, IsArray } from 'class-validator';\nimport { Type } from 'class-transformer';\n\nexport class UpdatePrescriptionDto {\n  @IsString()\n  date: string;\n\n  @IsArray()\n  @ValidateNested({ each: true })\n  @Type(() => MedicationDto)\n  medications: MedicationDto[];\n}\n\nexport class MedicationDto {\n  @IsString()\n  id: string;\n\n  @IsString()\n  dose: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/User.html":{"url":"entities/User.html","title":"entity - User","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/user.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/user.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ObjectIdColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/user.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/user.entity.ts:16\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Entity,\n  Column,\n  ObjectIdColumn,\n} from 'typeorm';\n\n@Entity()\nexport class User {\n  @ObjectIdColumn()\n  id: number;\n\n  @Column()\n  email: string;\n\n  @Column()\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserDto.html":{"url":"classes/UserDto.html","title":"class - UserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dtos/user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/user.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/user.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Expose } from 'class-transformer';\n\nexport class UserDto {\n  @Expose()\n  id: number;\n\n  @Expose()\n  email: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                createUser\n                            \n                            \n                                    \n                                    Async\n                                findUser\n                            \n                            \n                                    \n                                    Async\n                                signin\n                            \n                            \n                                    \n                                signOut\n                            \n                            \n                                    \n                                    \n                                whoAmI\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        createUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    createUser(body: CreateUserDto, session: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/signup')\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    session\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        findUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    findUser(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:id')\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        signin\n                        \n                    \n                \n            \n            \n                \n                    \n                    signin(body: CreateUserDto, session: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/signin')\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    session\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        signOut\n                        \n                    \n                \n            \n            \n                \n                    \n                    signOut(session: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/signout')\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    session\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        whoAmI\n                        \n                    \n                \n            \n            \n                \n                    \n                    whoAmI(user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/whoami')@UseGuards(AuthGuard)\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         User\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Post,\n  Get,\n  Param,\n  NotFoundException,\n  Session,\n  UseGuards,\n} from '@nestjs/common';\nimport { CreateUserDto } from './dtos/create-user.dto';\nimport { UsersService } from './users.service';\nimport { Serialize } from '../interceptors/serialize.interceptor';\nimport { UserDto } from './dtos/user.dto';\nimport { AuthService } from './auth.service';\nimport { CurrentUser } from './decorators/current-user.decorator';\nimport { User } from './user.entity';\nimport { AuthGuard } from '../guards/auth.guard';\n\n@Controller('auth')\n@Serialize(UserDto)\nexport class UsersController {\n  constructor(\n    private usersService: UsersService,\n    private authService: AuthService,\n  ) {}\n\n  @Get('/whoami')\n  @UseGuards(AuthGuard)\n  whoAmI(@CurrentUser() user: User) {\n    return user;\n  }\n\n  @Post('/signout')\n  signOut(@Session() session: any) {\n    session.userId = null;\n  }\n\n  @Post('/signup')\n  async createUser(@Body() body: CreateUserDto, @Session() session: any) {\n    const user = await this.authService.signup(body.email, body.password);\n    session.userId = user.id;\n    return user;\n  }\n\n  @Post('/signin')\n  async signin(@Body() body: CreateUserDto, @Session() session: any) {\n    const user = await this.authService.signin(body.email, body.password);\n    session.userId = user.id;\n    return user;\n  }\n\n  @Get('/:id')\n  async findUser(@Param('id') id: string) {\n    const user = await this.usersService.findOne(parseInt(id));\n    if (!user) {\n      throw new NotFoundException('user not found');\n    }\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nAuthService\n\nAuthService\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nAuthService->UsersModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        configure\n                        \n                    \n                \n            \n            \n                \nconfigure(consumer: MiddlewareConsumer)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.module.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    consumer\n                                    \n                                            MiddlewareConsumer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { Module, MiddlewareConsumer } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { UsersController } from './users.controller';\nimport { UsersService } from './users.service';\nimport { AuthService } from './auth.service';\nimport { User } from './user.entity';\nimport { CurrentUserMiddleware } from './middlewares/current-user.middleware';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([User])],\n  controllers: [UsersController],\n  providers: [UsersService, AuthService],\n})\nexport class UsersModule {\n  configure(consumer: MiddlewareConsumer) {\n    consumer.apply(CurrentUserMiddleware).forRoutes('*');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                find\n                            \n                            \n                                findOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repo: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/users/users.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repo\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(email: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        find\n                        \n                    \n                \n            \n            \n                \nfind(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { Repository } from 'typeorm';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { User } from './user.entity';\n\n@Injectable()\nexport class UsersService {\n  constructor(@InjectRepository(User) private repo: Repository) {}\n\n  create(email: string, password: string) {\n    const user = this.repo.create({ email, password });\n\n    return this.repo.save(user);\n  }\n\n  findOne(id: number) {\n    if (!id) {\n      return null;\n    }\n    return this.repo.findOneBy({ id });\n  }\n\n  find(email: string) {\n    return this.repo.find({ where: { email } });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.module.ts\n            \n            variable\n            cookieSession\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/guards/admin.guard.ts\n            \n            guard\n            AdminGuard\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/guards/auth.guard.ts\n            \n            guard\n            AuthGuard\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/interceptors/serialize.interceptor.ts\n            \n            class\n            SerializeInterceptor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/interceptors/serialize.interceptor.ts\n            \n            interface\n            ClassConstructor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/interceptors/serialize.interceptor.ts\n            \n            function\n            Serialize\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/prescriptions/dtos/create-prescription.dto.ts\n            \n            class\n            CreatePrescriptionDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/prescriptions/dtos/create-prescription.dto.ts\n            \n            class\n            MedicationDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/prescriptions/dtos/create-prescription.dto.ts\n            \n            class\n            PatientDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/prescriptions/dtos/get-prescription.dto.ts\n            \n            class\n            GetPrescriptionDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/prescriptions/dtos/prescription.dto.ts\n            \n            class\n            MedicationDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/prescriptions/dtos/prescription.dto.ts\n            \n            class\n            PatientDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/prescriptions/dtos/prescription.dto.ts\n            \n            class\n            PrescriptionDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/prescriptions/dtos/update-prescriptions.dto.ts\n            \n            class\n            MedicationDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/prescriptions/dtos/update-prescriptions.dto.ts\n            \n            class\n            UpdatePrescriptionDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/prescriptions/prescription.entity.ts\n            \n            entity\n            Prescription\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/prescriptions/prescriptions.controller.ts\n            \n            controller\n            PrescriptionsController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/prescriptions/prescriptions.service.ts\n            \n            injectable\n            PrescriptionsService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/users/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/users/auth.service.ts\n            \n            variable\n            scrypt\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/decorators/current-user.decorator.ts\n            \n            variable\n            CurrentUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/dtos/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/users/dtos/user.dto.ts\n            \n            class\n            UserDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/users/interceptors/current-user.interceptor.ts\n            \n            injectable\n            CurrentUserInterceptor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/users/middlewares/current-user.middleware.ts\n            \n            injectable\n            CurrentUserMiddleware\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/users/middlewares/current-user.middleware.ts\n            \n            interface\n            Request\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/users/user.entity.ts\n            \n            entity\n            User\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/5)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^10.0.0\n        \n            @nestjs/config : ^3.0.0\n        \n            @nestjs/core : ^10.0.0\n        \n            @nestjs/mapped-types : ^2.0.2\n        \n            @nestjs/platform-express : ^10.0.0\n        \n            @nestjs/typeorm : ^10.0.0\n        \n            @types/cookie-session : ^2.0.44\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.0\n        \n            cookie-session : ^2.0.0\n        \n            cross-env : ^7.0.3\n        \n            mongodb : ^5.7.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : ^7.8.1\n        \n            typeorm : ^0.3.17\n        \n            uuid : ^9.0.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            Serialize   (src/.../serialize.interceptor.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/interceptors/serialize.interceptor.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Serialize\n                        \n                    \n                \n            \n            \n                \nSerialize(dto: ClassConstructor)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                ClassConstructor\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript repository based on FHIR framework.\nHigh Level Design Diagram\n\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PrescriptionsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_PrescriptionsModule\n\n\n\ncluster_PrescriptionsModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nPrescriptionsModule\n\nPrescriptionsModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nPrescriptionsModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nPrescriptionsService\n\nPrescriptionsService\n\nPrescriptionsModule -->\n\nPrescriptionsService->PrescriptionsModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nUsersModule -->\n\nAuthService->UsersModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        3 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    3 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    2 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    6 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    12 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            cookieSession   (src/.../app.module.ts)\n                        \n                        \n                            CurrentUser   (src/.../current-user.decorator.ts)\n                        \n                        \n                            scrypt   (src/.../auth.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        cookieSession\n                        \n                    \n                \n            \n                \n                    \n                        Default value : require('cookie-session')\n                    \n                \n\n\n        \n    \n\n    src/users/decorators/current-user.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CurrentUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator(\n  (data: never, context: ExecutionContext) => {\n    const request = context.switchToHttp().getRequest();\n    return request.currentUser;\n  },\n)\n                    \n                \n\n\n        \n    \n\n    src/users/auth.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        scrypt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : promisify(_scrypt)\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
